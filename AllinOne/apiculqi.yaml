openapi: 3.0.0
info:
  title: CULQI API
  version: '1.0'
  description: "# Introducción\nLa API de [Culqi](http://culqi.com/) está construido bajo los estándares de **REST**. Es decir, nuestra API posee URLs orientada a recursos, y hace uso de los [códigos de respuesta HTTP](https://httpstatuses.com/) para indicar los posibles errores en el API. Para cada petición se encuentra implementada una autenticación HTTP (<em>Bearer Token</em>). Además, soportamos las solicitudes HTTP de origen cruzado (CORS), permitiendo que tu **sitio** y **Culqi** puedan interactuar de manera segura mediante nuestra API desde una aplicación cliente. Cada petición a las API retorna un objeto [JSON](http://www.json.org/) incluyendo errores. Adicionalmente nuestras [bibliotecas](https://docs-dev.culqi.xyz/es/documentacion/librerias/) convierten las respuestas en objetos específicos para cada lenguaje soportado.\n\nPara que puedas comenzar a experimentar con nuestra API, todas las cuentas registradas en Culqi poseen llaves para el **entorno de pruebas** ([Regístrate](https://integ-panel.culqi.com/#/registro) y obtén tus llaves) y el **entorno de producción**. Usando las **llaves de prueba** las transacciones nunca pasan por las redes bancarias y no tienen ningún costo. (¡Recuerda usar [tarjetas de prueba](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/tarjetas-de-prueba/), no tarjetas reales al probar!).\n\n<div class=\"box info\"><div class=\"content\">Nunca deberías exponer tu <a href=\"https://docs-dev.culqi.xyz/es/documentacion/pagos-online/llaves/\">Llave Secreta</a> en el código de la aplicación web cliente.</div></div>\n\n<div class=\"cntrecursos\">\n  <a href=\"#tag/Tokens\">\n   <div class=\"cnttoken\">\n       <div class=\"cnttokenup\">\n           <div class=\"contentimgtokenletra\">\n               <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/tokens.png\" width=\"40\"></div>\n               <div class=\"cnttextotoken\"> <strong>Tokens</strong>\n                   <br><span> /tokens</span> </div>\n           </div>\n           <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n       </div>\n       <div class=\"cnttokenlower\"> Captura de manera segura datos sensibles de tarjetas de crédito y débito directamente desde el navegador de tu cliente sin que toquen tus servidores.</div>\n   </div>\n  </a>\n  <a href=\"#tag/Cargos\">\n     <div class=\"cnttoken\" style=\"margin-right:0px;\">\n         <div class=\"cnttokenup\">\n             <div class=\"contentimgtokenletra\">\n                 <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/charges.png\" width=\"40\"></div>\n                 <div class=\"cnttextotoken\"> <strong>Cargos</strong>\n                     <br><span> /charges</span> </div>\n             </div>\n             <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n         </div>\n         <div class=\"cnttokenlower\"> Realiza un cargo o cobro a las tarjetas de crédito o débito de tus clientes usando un token de cargo único o una tarjeta que haya sido guardada previamente. </div>\n     </div>\n  </a>\n  <a href=\"#tag/Planes\">\n   <div class=\"cnttoken\">\n       <div class=\"cnttokenup\">\n           <div class=\"contentimgtokenletra\">\n               <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/plans.png\" width=\"40\"></div>\n               <div class=\"cnttextotoken\"> <strong>Planes</strong>\n                   <br><span> /plans</span> </div>\n           </div>\n           <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n       </div>\n       <div class=\"cnttokenlower\"> Define un plan que contenga información acerca del tipo de cargo, frecuencia, intervalo y monto que quieres cobrarle a un cliente de manera recurrente. </div>\n   </div>\n </a>\n    <a href=\"#tag/Suscripciones\">\n    <div class=\"cnttoken\" style=\"margin-right:0px;\">\n     <div class=\"cnttokenup\">\n         <div class=\"contentimgtokenletra\">\n             <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/subscriptions.png\" width=\"40\"></div>\n             <div class=\"cnttextotoken\"> <strong>Suscripciones</strong>\n                 <br><span> /subscriptions</span> </div>\n         </div>\n         <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n     </div>\n     <div class=\"cnttokenlower\"> Realiza cargos recurrentes a tus clientes asociando una tarjeta de crédito o débito asociada con un plan de suscripción creado previamente. </div>\n    </div>\n  </a>\n  <a href=\"#tag/Clientes\">\n   <div class=\"cnttoken\">\n       <div class=\"cnttokenup\">\n           <div class=\"contentimgtokenletra\">\n               <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/customers.png\" width=\"40\"></div>\n               <div class=\"cnttextotoken\"> <strong>Clientes</strong>\n                   <br><span> /customers</span> </div>\n           </div>\n           <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n       </div>\n       <div class=\"cnttokenlower\"> Crear un cliente te permitirá asociar un usuario a una o varias tarjetas de crédito o débito para realizarles cargos recurrentes o pagos en un solo click. </div>\n   </div>\n </a>\n <a href=\"#tag/Tarjetas\">\n     <div class=\"cnttoken\" style=\"margin-right:0px;\">\n         <div class=\"cnttokenup\">\n             <div class=\"contentimgtokenletra\">\n                 <div class=\"cntimgtoken\"><img src=\"assets/images/boxes/cards.png\" width=\"40\"></div>\n                 <div class=\"cnttextotoken\"> <strong>Tarjetas</strong>\n                     <br><span> /cards</span> </div>\n             </div>\n             <div class=\"cntimgletrintokenurl\"><img src=\"assets/images/flechon.jpg\"></div>\n         </div>\n         <div class=\"cnttokenlower\"> Guarda información de las tarjetas de tus clientes frecuentes para realizarles cargos sin que vuelvan a ingresar toda la información de sus tarjetas de crédito o débito. </div>\n     </div>\n  </a>\n</div>\n\n# Autenticación\nPara poder acceder y utilizar la API de Culqi necesitas previamente obtener tus [Llaves de Autenticación](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/llaves/) e incluirlas en cada petición que hagas al API. Podrás encontrar tus llaves en el Panel de [Integración](https://integ-panel.culqi.com/) y [Producción](http://panel.culqi.com/) de Culqi.\n<div class=\"box warning\"><div class=\"content\">Ten en cuenta que es información muy sensible y no puedes compartirlas con nadie.</div></div>\nPara usar el API de Culqi utiliza autenticación Bearer como se muestra a continuación :\n\n**Ejemplo de Autenticación:**\n```\n-H \"Authorization: Bearer sk_test_UTCQSGcXW8bCyU59\"\n```\n\nTodas las peticiones al API deben ser hechas bajo el protocolo de transferencia **HTTPS.** Las llamadas hechas bajo el protocolo HTTP plano fallarán en el [entorno de producción](https://docs.culqi.com/#/cuenta/cuenta) al igual que las peticiones sin autenticación.\n\n# Errores\nPor medio de nuestra API, podrás ser notificado con toda la información en caso presentes un error al momento de hacer una petición a cualquier operación del API. La API de Culqi utiliza el estándar de Códigos de Estado HTTP (HTTP Status Codes) en todas sus respuestas para indicar si las solicitudes se pudieron procesar con éxito o fallaron.\n\n## Objeto Error\n\nAtributos:\n<div>\n<table>\n<tbody>\n<tr>\n<td title=\"date\">type\n<div>required</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example:  \"card_error\"</div>\n<div> Enum:  \"invalid_request_error\", \"authentication_error\", \"parameter_error\", \"card_error\", \"limit_api_error\", \"resource_error\"  y \"api_error\"</div>\n<div>\n<div>\n<p>Indica el tipo de error devuelto</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"charge_id\">charge_id\n<div></div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example:  \"chr_test_stm3Fr4HIPC50qxH\"\"</div>\n<div>\n<div>\n<p>El ID del cargo que ha sido denegado</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"code\">code\n<div>Example: \"card_declined\"</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>\n<div>\n<p>Indica el tipo de error relacionado a una tarjeta</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"declined_code\">declined_code\n<div>Example: \"insufficient_funds\"</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>\n<div>\n<p>Indica el motivo de denegación devuelto por los bancos.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"merchant_message\">merchant_message\n<div>required</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div> Example: \"La tarjeta no tiene fondos suficientes para realizar la compra.\"</div>\n<div>\n<div>\n<p>Mensaje dirigido al comercio para conocer el detalle del error.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"merchant_message\">user_message\n<div></div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div> Example: \"Su tarjeta no tiene fondos suficientes. Verifica tus fondos disponibles con el banco emisor o inténta nuevamente con otra tarjeta.</div>\n<div>\n<div>\n<p>Mensaje dirigido al cliente para conocer el detalle del error.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n  <tr>\n<td title=\"merchant_message\">param\n<div></div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div> Example: \"amount\"</div>\n<div>\n<div>\n<p>Indica el parámetro específico relacionado al error.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n\n## Códigos HTTP\n\nCulqi usa los siguientes códigos de estado HTTP en sus respuestas:\n\n  | Código | HTTP Status | Descripción                         |\n  |--------|-------------|-------------------------------------|\n  | 200    | OK          | Todo ha salido a la perfección.     |\n  | 201    | Created     | Un nuevo recurso ha sido creado. (POST).     |\n  | 204    | No Content  | El recurso fue exitosamente eliminado. (DELETE)     |\n  | 400    | Bad Request          | La petición al servidor no ha podido ser procesada debido a una sintáxis incorrecta.     |\n  | 401    | Unauthorized          | La llave API utilizada es inválida.     |\n  | 402    | Payment Required\t          | El pago no pudo ser procesado.     |\n  | 404    | Not Found          | \tEl recurso solicitado en la llamada no existe.     |\n  | 422    | Unprocessable Entity          | La sintaxis de la llamada es válida pero la información dentro de los parámetros es inválida.     |                                                                      \n  | 500 y 503    | Server Errors          | \tError en los servidores Culqi y la petición no pudo ser procesada.     |  \n  \n  \n  \n## Tipos de Errores\n\nCulqi devuelve los siguientes tipos de errores relacionados con los códigos de estado HTTP en sus respuestas:\n\n  | Type| HTTP Status Code - Descripción |\n  |--------|-------------|\n  | invalid_request_error| HTTP 400 - La petición tiene una sintaxis inválida.|\n  | authentication_error| HTTP 401 - La petición no pudo ser procesada debido a problemas con las llaves.|\n  | parameter_error| HTTP 422 - Algún parámetro de cualquier petición es inválido.|\n  | card_error| HTTP 402 - No se pudo realizar el cargo a una tarjeta.|  \n  | limit_api_error| HTTP 429 - Estás haciendo muchas peticiones rápidamente al API o superaste tu límite designado.|  \n  | resource_error| HTTP 404 - El recurso no puede ser encontrado, es inválido o tiene un estado diferente al permitido.|  \n  | api_error| HTTP 500 y 503 - Engloba cualquier otro tipo de error (Ejemplo: problema temporal con los servidores de Culqi) y debería de ocurrir muy pocas veces.|  \n  \n\n## Codigos de Denegación de Bancos\n\nCulqi devuelve los siguientes tipos de denegaciones devueltas por los bancos:\n\n| Decline Code\t| Explicación |\n|--------|-------------|\n| expired_card\t| Tarjeta vencida. La tarjeta está vencida o la fecha de vencimiento ingresada es incorrecta.| \n| stolen_card| Tarjeta robada. La tarjeta fue bloqueada y reportada al banco emisor como una tarjeta robada| \n| lost_card| Tarjeta perdida. La tarjeta fue bloqueada y reportada al banco emisor como una tarjeta perdida.| \n| insufficient_funds| Fondos insuficientes. La tarjeta no tiene fondos suficientes para realizar la compra.| \n| contact_issuer| Contactar emisor. La operación fue denegada por el banco emisor de la tarjeta y el cliente necesita contactarse con la entidad para conocer el motivo.| \n  | invalid_cvv| CVV inválido. El código de seguridad (CVV2, CVC2, CID) de la tarjeta es inválido.| \n| too_many_attempts_cvv| Exceso CVV. El cliente ha intentado demasiadas veces ingresar el código de seguridad (CVV2, CVC2, CID) de la tarjeta.| \n| issuer_not_available| Emisor no disponible. El banco que emitió la tarjeta no responde. El cliente debe realizar el pago nuevamente.| \n| issuer_decline_operation| Operación denegada. La operación fue denegada por el banco emisor de la tarjeta por una razón desconocida.| \n  |invalid_card| Tarjeta inválida. La tarjeta utilizada tiene restricciones para este tipo de compras. El cliente necesita contactarse con el banco emisor para conocer el motivo de la denegación.| \n  |processing_error| Error de procesamiento. Ocurrió un error mientras procesabamos la compra. Contáctate con culqi.com/soporte para que te demos una solución.| \n  |fraudulent| Operación fraudulenta. El banco emisor de la tarjeta sospecha que se trata de una compra fraudulenta.| \n  |culqi_card| Tarjeta Culqi. Estás utilizando una tarjeta de pruebas de Culqi para realizar una compra real.| \n  |soft_block| Tarjeta con bloqueo temporal por reintentos. El cliente debe intentar nuevamente con otra tarjeta.| \n  \n## Casos de Errores\n\nA continuación te presentamos una serie de ejemplos de errores comunes a la hora de integrar la API de Culqi.\n\n#### Petición Inválida\nEl formato de la petición no es JSON.\n\n```json\n{\n  \"object\": \"error\",\n  \"type\": \"invalid_request_error\",\n  \"merchant_message\": \"Petición invalida, verifica que el Content-Type sea\n  application/json (formato JSON) y el cuerpo un JSON válido.\"\n}\n```\n\n#### Autenticación\nNo ingresate una llave de autenticación válida.\n\n```json\n{\n  \"object\": \"error\",\n  \"type\": \"authentication_error\",\n  \"code\": \"invalid_key\",\n  \"merchant_message\": \"Código de comercio proporcionado inválido: AJVBX245.\n  Revisa tus llaves correctas en tu panel Culqi (http://culqi.com/).\"\n}\n```\n\n#### Parámetros Inválidos\nIngresaste un parámetro inválido.\n\n```json\n{\n  \"object\": \"error\",\n  \"type\": \"parameter_error\",\n  \"code\": \"invalid_amount\",\n  \"merchant_message\": \"El campo 'amount' es inválido.  El valor debe ser mayor\n  o igual que '100' (1 Nuevo Sol) .\",\n  \"param\": \"amount\"\n}\n```\n\n#### Tarjetas Denegadas\nEl banco denegó la compra porque el cliente no tenía fondos suficientes.\n\n```json\n{\n  \"object\": \"error\",\n  \"type\": \"card_error\",\n  \"charge_id\": \"chr_test_stm3Fr4HIPC50qxH\",\n  \"code\": \"card_declined\",\n  \"decline_code\": \"insufficient_funds\"\n  \"merchant_message\": \"La La tarjeta no tiene fondos suficientes para realizar\n  la compra. \",\n  \"user_message\": \"Su tarjeta no tiene fondos suficientes. Verifica tus fondos\n  disponibles con el banco emisor o inténta nuevamente con otra tarjeta.\"\n}\n```\n\n## Manejo de Errores\nNuestras bibliotecas manejan excepciones por muchas razones. Entre ellas cargos denegados, parámetros inválidos, errores de autenticación y no disponibilidad de los bancos emisores. Recomendamos que contemples todos los escenarios y manejes todas las excepciones que presenta nuestra API.    \n\n# Metadata\nLa metadata es una manera útil de guardar información adicional de manera estructurada en un objeto. Todos los recursos de Culqi, incluyendo [Tokens](#tag/Tokens), [Cargos](#tag/Cargos), [Planes](#tag/Planes), [Suscripciones](#tag/Suscripciones), [Devoluciones](#tag/Devoluciones), [Tarjetas](#tag/Tarjetas), [Clientes](#tag/Tarjetas) tienen un parámetro metadata que puede ser utilizado para reflejar información clave de tu negocio que quieras relacionar con las operaciones.\n\nPor ejemplo, en el parámetro *metadata* del recurso [Clientes](#tag/Clientes) podrías guardar el nombre completo de tu cliente, su número de documento de identidad y su fecha de nacimiento. La *metadata* no es utilizada por Culqi para analizar, realizar o rechazar un cargo.\n\n<div class=\"box info\"><div class=\"content\">El atributo metadata no puede tener más de 20 objetos clave-valor. Adicionalmente, la clave no podrá exceder de 30 caracteres y el valor de 200 caracteres.</div></div>\n\n**Ejemplos de Metadata** </br>\nPor ejemplo, en la petición para [crear un cargo](#operation/crear-cargo) al API, podrías enviar a través del objeto metadata los valores como user_id, user_details:\n```json\n{\n  \"amount\":200,\n  \"currency_code\":\"PEN\",\n  \"source_id\":\"tkn_live_189fqQ2eZvKYlo2\",\n  \"description\":\"Apple Watch Series 20\",\n  \"installments\":6,\n  \"capture\":true,\n  \"metadata\": {\n      \"order_id\":\"204055\",\n      \"user_id\":\"4625\",\n      \"user_details\":\"46734527\"\n  }\n}\n```\nAquí te presentamos algunas sugerencias para los valores de *metadata:*\n    \n<div>\n  <table >\n    <tbody>\n      <tr class=\"\">\n        <td  kind=\"field\" title=\"order_id\"><span class=\"property-name\">order_id</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\"></div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">{'order_id':'204055'}</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Adjunta un número de pedido incremental.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"\">\n        <td kind=\"field\" title=\"user_id\"><span class=\"property-name\">user_id</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\"></div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">{'user_id:'4625'}</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Adjunta un identificador del cliente de tu sistema.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"last\">\n        <td kind=\"field\" title=\"user_details\"><span class=\"property-name\">user_details</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\"></div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>                \n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">{'dni':'46734527'}</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Adjunta datos adicionales sobre tu cliente.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n\n# Paginación\nTodas las APIs de Culqi soportan operaciones de listado, entre ellos [Tokens](https://apidocs-dev.culqi.xyz/#/tokens), [Cargos](https://apidocs-dev.culqi.xyz/#/cargos), [Tarjetas](https://apidocs-dev.culqi.xyz/#/tarjetas), [Clientes](https://apidocs-dev.culqi.xyz/#/clientes), [Suscripciones](https://apidocs-dev.culqi.xyz/#/suscripciones), [Devoluciones](https://apidocs-dev.culqi.xyz/#/devoluciones) y [Planes](URL_APIDOCS_PLANES). Adicionalmente, todos los métodos de listado del API comparten una estructura similar tomando en cuenta estos tres parámetros: limit, after y before.\n\nCulqi utiliza una paginación en tiempo real basada en cursor a través de los parámetros after y before. Un cursor se refiere a un <em>string</em> de caracteres random que marca un ítem específico en una lista de datos. A menos que el ítem sea borrado, el cursor siempre estará punteando la misma parte de la lista, pero será invalidado si el ítem es removido.\n\nEn Culqi, los parámetros after y before toman el valor ID y retornan los objetos en un orden cronológico reverso. El parámetro before devuelve los objetos creados antes del objeto en cuestión. El parámetro after devuelve los objetos creados después del objeto en cuestión. Si ambos parámetros son provistos sólo before es utilizado.\n\n## Ejemplo de Paginación\n\nEn el siguiente ejemplo podrás conocer cómo realizar una petición para obtener un listado de los últimos 50 [cargos](https://apidocs.culqi.com/#/cargos#list).\n\n### Petición\n\nPetición\n\n ```json\ncurl -X GET -H \"Authorization: Bearer sk_test_wJ7jU1ydtz9npsmc\"\n-H \"Cache-Control: no-cache\"\n\"https://api.culqi.com/v2/charges?limit=50&before=chr_test_kzGrl1jlVSaY8guT\"\n```\n\n\nAtributos\n\n<div>\n<table>\n<tbody>\n<tr>\n<td title=\"limit\">limit\n<div>required</div>\n<div>MinValue: 1</div>\n<div>MaxValue: 100\t</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example:   \"50\"</div>\n<div>\n<div>\n<p>El número limite de objetos que quieres que sean retornados</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"charge_id\">charge_id\n<div></div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example:  \"chr_test_stm3Fr4HIPC50qxH\"\"</div>\n<div>\n<div>\n<p>El ID del cargo que ha sido denegado</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"after\">after\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example: \"chr_test_ExT9c1UFAH0TX2Ui\"</div>\n<div>\n<div>\n<p>El objeto desde donde se quiere traer la siguiente página (no inclusivo)</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"before\">before\n</td>\n<td>\n<div>\n<div>string</div>\n  <div>Example: \"chr_test_kzGrl1jlVSaY8guT\"</div>\n<div>\n<div>\n<p>El objeto desde donde se quiere traer la página anterior (no inclusivo)\n.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\nRespuesta\n\n```json\n  {\n  \"data\":[\n    ...\n  ],\n  \"paging\":{\n    \"previous\": \"https://api.culqi.com/v2/charges?limit=50&before=chr_test\n    _kzGrl1jlVSaY8guT\",\n    \"next\": \"https://api.culqi.com/v2/charges?limit=50&after=chr_test_ExT9\n    c1UFAH0TX2Ui\",\n    \"cursors\": {\n    \"before\": \"chr_test_kzGrl1jlVSaY8guT\",\n    \"after\": \"chr_test_ExT9c1UFAH0TX2Ui\"\n    }\n  }\n}\n```\n\nAtributos\n\n<div>\n<table>\n<tbody>\n<tr>\n<td title=\"data\">data\n<div>required</div>\n<div>MinValue: 1</div>\n<div>MaxValue: 100\t</div>\n</td>\n<td>\n<div>\n<div>string</div>\n<div>Example:   \"50\"</div>\n<div>\n<div>\n<p>Un arreglo que contiene los elementos de la respuesta paginados por los parámetros de la petición.</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n<tr>\n<td title=\"paging\">paging\n<div>required</div>\n</td>\n<td>\n<div>\n<div>object</div>\n<div>\n<div>\n<p>Objeto que contiene la información de los cursores.\n</p>\n</div>\n</div>\n</div>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n## Auto-paginación\nLa mayoría de nuestras [bibliotecas](https://docs-dev.culqi.xyz/es/documentacion/librerias/) soportan auto-paginación. Esta funcionalidad te permite manejar grandes listados de recursos sin tener que implementar manualmente resultados paginados y realizar peticiones subsequentes. \n\n\n\n# ID de Rastreo\nCada petición al API está asociada a un identificador de rastreo. Puedes encontrar este valor en los headers de respuesta, bajo el nombre de x-culqi-tracking-id, también lo puedes encontrar en el Panel de Culqi y en el detalle de cada petición.\n\n<div class=\"box info\"><div class=\"content\">Si necesitas ayuda con alguna petición en específico, brindando este ID de rastreo hará más fácil la ubicación y posterior solución del problema o incidencia.</div></div>\n\n\n**Ejemplo de Headers de Respuesta:**\n\n```json Headers\n\"date\": \"1476132639\",\n\"x-culqi-environment\": \"live\",\n\"x-culqi-tracking-id\": \"9283\",\n\"x-culqi-version\": \"17.01.89\",\n\"content-type\": \"application/json\"\n```\nAtributos:\n\n<div>\n  <table id=\"tblAttr\">\n    <tbody>\n      <tr class=\"\">\n        <td  kind=\"field\" title=\"date\"><span class=\"property-name\">date</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\">required</div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"1476132639\"</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Fecha en la que se creó la petición en UNIX Timestamp.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"\">\n        <td kind=\"field\" title=\"x-culqi-environment\"><span class=\"property-name\">x-culqi-environment</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\">required</div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Enum:</span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"live\"</span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"test\"</span> </div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Entorno al que se realizó la petición. Ver más.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"\">\n        <td kind=\"field\" title=\"x-culqi-tracking-id\"><span class=\"property-name\">x-culqi-tracking-id</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\">required</div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"9283\"</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Código de identificación de la petición.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"\">\n        <td kind=\"field\" title=\"x-culqi-version\"><span class=\"property-name\">x-culqi-version</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\">required</div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Example: </span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"17.01.89\"</span></div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Número de versión del API.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n      <tr class=\"last \">\n        <td kind=\"field\" title=\"content-type\"><span class=\"property-name\">content-type</span>\n          <div class=\"sc-oeezt sc-hhIiOg bkbCTW kXduun\">required</div>\n        </td>\n        <td class=\"sc-bkbkJK gaTxIt_culqi\">\n          <div>\n            <div><span class=\"sc-laZMeE sc-iNiQyp dmLkmF isTLDY\"></span><span class=\"sc-laZMeE sc-jffHpj dmLkmF lVyis\">string</span></div>\n            <div><span class=\"sc-laZMeE dmLkmF\"> Value:</span> <span class=\"sc-laZMeE sc-ckTSus dmLkmF cDPDUw\">\"applcation/json\"</span> </div>\n            <div>\n              <div class=\"sc-iJCRrE sc-ciSkZP ifDxYI wfptf\">\n                <p>Formato de contenido de la respuesta.</p>\n              </div>\n            </div>\n          </div>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n</div>   \n\n\n# Versionado\nCuando realizamos cambios al API de Culqi que afectan la compatibilidad con versiones anteriores, realizamos lanzamientos de nuevas modificaciones de manera versionada. La última versión fue lanzada el 08-02-2017.\n\n<div class=\"box info\"><div class=\"content\">Los eventos generados por las peticiones al API estarán siempre estructurados de acuerdo a tu versión del API.</div></div>\n\n| Versión API | Fecha | Docs  |\n| --- | ----------- | ----- |\n| v2.0 | 08-02-2017 | [API 2.0](https://apidocs.culqi.com/) |\n| v1.2 | 23-08-2016 | [API 1.2](https://culqi.api-docs.io/v1.2) (Descontinuada) |\n| v1.0 | 01-09-2015\t| Descontinuada |\n\n**Historial de Cambios**\n<br/>\n**07-03-2017**\n+ Se añadió el parámetro 'validate' para validar tarjeta en [Crear Tarjeta](#operation/crear-tarjeta) (Tarjetas).\n+ Se añadió el parámetro 'token_id' en [Actualizar Tarjeta](#operation/actualizar-tarjeta) (Tarjetas).\n \n\n**15-02-2017**\n- Se limitó el Content-Type que consumen y producen los endpoint a application/json.\n- Se añadió el filtro de metadata en las operaciones de listado.\n\n# Webhooks\nPara usar los eventos listados debes leer nuestra [guía de integración de Webhooks.](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/webhooks/)\n**Lista de Eventos Tokens**\n| Evento | Descripción |\n| --- | --- |\n| token.creation.succeeded | El token fue creado con éxito. |     \n| token.creation.failed | El token no pudo ser creado. |\n| token.expired | El token ha expirado y no puede ser usado para realizar un cargo. |\n| token.update.succeeded | La información del token fue actualizada. |\n| token.update.failed | La información del token no pudo ser actualizada. |\n\n**Lista de Eventos Cargos**\n\n| Evento | Descripción |\n| --- | --- |\n| charge.creation.succeeded | El cargo fue procesado con éxito. |     \n| charge.creation.failed | El cargo no pudo ser procesado y ha sigo denegado. |\n| charge.expired | El cargo ha expirado y el monto de la venta devuelto a la tarjeta del cliente. |\n| charge.update.succeeded | El cargo fue procesado con éxito. |\n| charge.update.fail | La información del cargo no pudo ser actualizada. |\n| charge.capture.succeeded | El cargo fue capturado. |\n| charge.capture.failed | El cargo no pudo ser capturado. |\n\n**Lista de Eventos Devoluciones**\n| Evento | Descripción |\n| --- | --- |\n| refund.creation.succeeded | La devolución ha sido procesada con éxito. | \n| refund.creation.failed | La devolución no pudo ser procesada. |\n| refund.update.succeeded | La información de la devolución fue actualizada. |\n| refund.update.failed | La información de la devolución no pudo ser actualizada. |\n\n**Lista de Eventos Clientes**\n| Evento | Descripción |\n| --- | --- |\n| customer.creation.succeeded | El cliente fue creado con éxito. | \n| customer.creation.failed | El cliente no pudo ser creado. |\n| customer.delete.succeeded | El cliente ha sido eliminado con éxito. |\n| customer.delete.failed | El cliente no pudo ser eliminado. |\n\n**Lista de Eventos Tarjetas**\n| Evento | Descripción |\n| --- | --- |\n| card.creation.succeeded | La tarjeta fue creada con éxito. |\n| card.creation.failed | La tarjeta no pudo ser creada. |\n| card.updated.succeeded | La información de la tarjeta fue actualizada con éxito. |\n| card.updated.failed | La información de la tarjeta no pudo ser actualizada. |\n| card.delete.succeeded | La tarjeta fue eliminada con éxito. |\n| card.delete.failed | La tarjeta no pudo ser eliminada. |\n\n**Lista de Eventos Planes**\n| Evento | Descripción |\n| --- | --- |\n| plan.creation.succeeded\t| El plan fue creado con éxito. |\n| plan.creation.failed | El plan no pudo ser creado. |\n| plan.update.succeeded | La información del plan fue actualizada con éxito. |\n| plan.update.failed | La información del plan no pudo ser actualizada. |\n| plan.delete.succeeded | El plan fue eliminado con éxito. |\n| plan.delete.failed | El plan no pudo ser eliminado. |\n\n**Lista de Eventos Suscripciones**\n| Evento | Descripción |\n| --- | --- |\n| subscription.creation.succeeded\t| La suscripción fue creada con éxito. |\n| subscription.creation.failed | La suscripción no pudo ser creada. |\n| subscription.update.succeeded | La información de la suscripción fue actualizada con éxito. |\n| subscription.update.failed | La información de la suscripción no pudo ser actualizada. |\n| subscription.cancel.succeeded | La suscripción ha sido cancelada con éxito. |\n| subscription.cancel.failed | La suscripción no pudo ser cancelada. |\n\n**Lista de Eventos Órdenes**\n| Evento | Descripción |\n| --- | --- |\n| order.status.changed\t| La orden cambió de estado. |\n| order.creation.succeeded | La orden fue creada con éxito. |\n"
servers:
  - url: 'https://dev-api.culqi.xyz'
tags:
  - name: Tokens
    description: >-
      **Tokenización** es el proceso que utiliza Culqi para capturar de manera
      segura datos sensibles de tarjetas de crédito y débito directamente desde
      el navegador del cliente. Un <em>token</em> representa a una tarjeta
      dentro del flujo de pago de Culqi y es devuelto a tus servidores para que
      puedas utilizarlo a través de [Culqi Checkout](https://docs-dev.culqi.xyz/es/documentacion/checkout/),
      [Culqi.JS](https://docs-dev.culqi.xyz/es/documentacion/culqi-js/) o nuestras bibliotecas para móviles
      ([iOS](https://docs-dev.culqi.xyz/es/documentacion/librerias/frontend/ios/) y [Android](https://docs-dev.culqi.xyz/es/documentacion/librerias/frontend/android/)). Este
      método nos asegura que ningún dato de tarjeta toque tus servidores y
      permite que la integración cumple con la normativa **PCI DSS**.

      </br> </br>

      Si no deseas hacer uso de los métodos de tokenización disponibles, también
      puedes crear tokens utilizando la API y tu llave pública. Pero en este
      caso recuerda que tu empresa será la responsable de cualquier
      procedimiento requerido por la normativa **PCI DSS**, como por ejemplo el
      [siguiente autocuestionario](https://www.pcisecuritystandards.org/documents/SAQ_D_v3_Merchant.pdf). A diferencia
      de Culqi Checkout, Culqi.JS y los SDKs para móviles, la información de tu
      cliente no será enviada directamente a Culqi así que no podríamos
      determinar si manejas o guardas esta información con seguridad.

      </br>

      <div class="box info"><div class="content">Los tokens tienen un tiempo de
      expiración de 5 minutos por lo que no pueden ser guardados y utilizados
      más de una vez. Para hacerlos permanentes y generar cargos posteriores o
      recurrentes, debes <a href="#operation/crear-cliente">crear un cliente</a>
      y posteriormente <a href="#operation/crear-tarjeta"> crear una
      tarjeta</a>.</div></div>


      # Objeto Token

      <SchemaDefinition schemaRef="#/components/schemas/Token" />
  - name: Cargos
    description: >
      Para realizar un cargo a una tarjeta de débito o crédito debes crear un
      objeto cargo. Adicionalmente puedes consultar, devolver un cargo en
      particular o listar tu historial de cargos en base a los filtros que
      desees. Todos los cargos están identificados por un ID.

      # Objeto Cargo

      <SchemaDefinition schemaRef="#/components/schemas/Cargo" />
  - name: Devoluciones
    description: >
      Una devolución te permite devolver un cargo que ha sido creado previamente
      y que aún no ha sido devuelto en su totalidad. Los fondos serán devueltos
      a la tarjeta de crédito o débito que se ha realizado el cargo.

      # Objeto Devolucion

      <SchemaDefinition schemaRef="#/components/schemas/Devolucion" />
  - name: Clientes
    description: >
      El recurso cliente te permite guardar la información de tus clientes para
      realizarles cargos recurrentes o posteriores. La API de Culqi permite
      crear, eliminar y actualizar los datos de tus clientes. Adicionalmente
      podrás consultar los datos de un cliente en particular o listar a todos
      tus clientes en base a los filtros que desees.

      # Objeto Cliente

      <SchemaDefinition schemaRef="#/components/schemas/Cliente" />
  - name: Tarjetas
    description: >
      El objeto Tarjeta se usa para crear cargos posteriores a una tarjeta.
      Recuerda que un Token por si solo vence a los 5 minutos de creado, pero si
      lo conviertes en una Tarjeta podrás realizar cargos posteriores. Podrás
      relacionar múltiples tarjeta al mismo Cliente.

      # Objeto Tarjeta

      <SchemaDefinition schemaRef="#/components/schemas/Tarjeta" />      
  - name: Planes
    description: >
      Un plan de suscripción contiene información acerca del tipo de cargo,
      frecuencia y monto que quieres cargarle a un Card de manera recurrente.
      Por ejemplo, podrías configurar un plan básico de S/ 50 mensuales y un
      plan Premium de S/ 75 mensuales.

      # Objeto Plan

      <SchemaDefinition schemaRef="#/components/schemas/Plan" />      
  - name: Suscripciones
    description: >
      El crear suscripciones te permite realizar cargos recurrentes a la tarjeta
      de un cliente. Una suscripción relaciona al objeto Customer y al objeto
      Plan que has creado previamente.

      <SchemaDefinition schemaRef="#/components/schemas/Suscripcion" />
  - name: Ordenes
    description: >
      El objeto Orden contiene información de una posible venta. Es usado para
      el método de pago en efectivo. Una vez es pagada la orden por tu cliente
      via banco o agente, cambia de estado en el momento de la acción. Con este
      recurso podrás brindar a tus clientes la opción de pagar sus compras en
      efectivo.

      # Objeto Orden

      <SchemaDefinition schemaRef="#/components/schemas/Orden" />
  - name: Eventos
    description: >
      Los eventos son formas de hacerte saber cuando algo sucede en tu cuenta de
      Culqi. Cuando un evento ocurre, Culqi crea un objeto Evento. Por ejemplo,
      cuando un cargo es exitoso, Culqi crea el evento charge.succeeded.
      Adicionalmente, si realizas muchas peticiones al API podría llegar a
      causar multiples eventos. Por ejemplo, si creas una suscripción para un
      cliente, recibirás el evento customer.subscription.created y el evento
      charge.succeeded.


      Al igual que los otros recursos del API, puedes consultar un evento
      particular o listar una serie de eventos directamente desde el API.
      Adicionalmente, hemos construido un sistema automatizado que enviará
      eventos directamente a tu servidor: webhooks. Te reconedamos que revises
      nuestra guía de webhooks para que sepas como configurarlos.

      # Objeto Evento

      <SchemaDefinition schemaRef="#/components/schemas/Evento" />
paths:
  /v2/tokens:
    post:
      tags:
        - Tokens
      summary: Crear Token
      operationId: crear-token
      description: >-
        Crear tokens te permitirá obtener información de la tarjeta y utilizarla
        para [crear un cargo](#operation/crear-cargo) o [crear una
        tarjeta](#operation/crear-tarjeta).

        - Si desarrollas una pagina web deberías crear token utilizando Culqi
        Checkout o CulqiJS

        - Si desarrollas una aplicación móvil deberías crear token utilizando
        nuestros SDKs para móviles (iOS o Android)

        - Si deseas crear el token de manera directa con el API de Culqi debes
        llenar el siguiente autocuestionario.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer pk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave pública](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  card_number: '4111111111111111'
                  cvv: '123'
                  expiration_month: 9
                  expiration_year: '2020'
                  email: richard@piedpiper.com
              properties:
                card_number:
                  type: string
                  minLength: 13
                  maxLength: 16
                  description: Número de tarjeta.
                  example: '4111111111111111'
                cvv:
                  type: string
                  minLength: 1
                  description: CVV de la tarjeta.
                  example: '123'
                expiration_month:
                  type: string
                  minLength: 1
                  maxLength: 2
                  example: 9
                  description: Mes de expiración de la tarjeta.
                expiration_year:
                  type: string
                  description: Año de expiración de la tarjeta.
                  minLength: 4
                  maxLength: 4
                  example: '2020'
                email:
                  type: string
                  description: Dirección de correo electrónico del cliente.
                  minLength: 5
                  maxLength: 50
                  example: ichard@piedpiper.com
                metadata:
                  type: object
                  description: Informacion adicional que se quiere enviar del token.
                  example:
                    dni: '5831543'
              required:
                - card_number
                - cvv
                - expiration_month
                - expiration_year
                - email
            examples:
              ejemplo 1:
                value:
                  card_number: '4111111111111111'
                  cvv: '123'
                  expiration_month: 9
                  expiration_year: '2020'
                  email: ichard@piedpiper.com
                  metadata:
                    dni: '5831543'
        description: ''
      responses:
        '201':
          description: La petición exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                ejemplo 1:
                  value:
                    object: token
                    id: tkn_live_0CjjdWhFpEAZlxlz
                    type: card
                    email: richard@piedpiper.com
                    creation_date: 1476132639
                    card_number: 442328******1214
                    last_four: '1214'
                    active: true
                    iin:
                      object: iin
                      bin: '442328'
                      card_brand: Visa
                      card_type: credito
                      card_category: platinum
                      issuer:
                        name: Silicon Valley Bank
                        country: United States
                        country_code: US
                        website: https://www.svb.com
                        phone_number: +1.800.774.7390
                      installments_allowed:
                        - 2
                        - 4
                        - 8
                        - 12
                        - 24
                        - 36
                    client:
                      ip: 72.229.28.185
                      ip_country: United States
                      ip_country_code: US
                      browser: Google Chrome 56.0.2924.87
                      device_fingerprint: 6rITdVTYkWfOrss8
                      device_type: escritorio
                    metadata:
                      dni: '5831543'
    get:
      tags:
        - Tokens
      summary: Listar Tokens
      operationId: listar-token
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                ejemplo 1:
                  value:
                    data: []
                    paging:
                      previous: null
                      next: null
                      cursors:
                        before: null
                        after: null
      description: >-
        Listar tokens te permitirá obtener una serie de tokens existentes. De
        acuerdo a los filtros que uses los tokens serán ordenados de acuerdo a
        la fecha de creación, siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date
          description: Fecha del token en [UNIX Timestamp.](http://www.unixtimestamp.com/)
        - schema:
            type: string
          in: query
          name: creation_date_to
          description: Número de tarjeta.
        - schema:
            type: string
            enum:
              - Visa
              - Mastercard
              - Amex
              - Diner
          in: query
          name: card_brand
          description: Marca de la tarjeta.
        - schema:
            type: string
            enum:
              - credito
              - debito
              - prepagada
          in: query
          name: card_type
          description: Tipo de tarjeta.
        - schema:
            type: string
            enum:
              - escritorio
              - movil
              - tablet
          in: query
          name: device_type
          description: Tipo de dispositivo.
        - schema:
            type: string
            minLength: 6
            maxLength: 6
            example: '411111'
          in: query
          name: bin
          description: >-
            Primeros seis dígitos de la tarjeta expresado en formato **ISO/IEC
            7812.** 
        - schema:
            type: string
            example: PE
          in: query
          name: country_code
          description: Código del país, en formato ISO-3166 (Alfa 2).
        - schema:
            type: string
            example: '50'
            minLength: 1
            maxLength: 100
          in: query
          name: limit
          description: Cantidad exacta de tokens que se quieren listar.
        - schema:
            type: string
            minLength: 25
            maxLength: 25
            example: tkn_live_7lYOtONQ9LxcgJUW
          in: query
          name: before
          description: >-
            El ID del token desde donde se quiere traer los resultados
            anteriores. No inclusivo.
        - schema:
            type: string
            example: tkn_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID del token desde donde se quiere traer los resultados
            siguientes. No inclusivo.
      requestBody:
        content:
          application/json:
            schema:
              type: object
  /v2/tokens/{id}:
    get:
      tags:
        - Tokens
      summary: Consultar Token
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                ejemplo 1:
                  value:
                    object: token
                    id: tkn_live_701ug3CDNJOAt5Q6
                    type: card
                    creation_date: 1486686216000
                    card_number: 411111******1111
                    last_four: '1111'
                    active: false
                    iin:
                      object: iin
                      bin: '411111'
                      card_brand: Visa
                      card_type: credit
                      card_category: Clásica
                      issuer:
                        name: JPMORGAN CHASE BANK, N.A.
                        country: United States
                        country_code: PE
                        website: null
                        phone_number: null
                      installments_allowed:
                        - 2
                        - 4
                        - 6
                        - 8
                        - 10
                        - 12
                    client:
                      ip: 190.235.231.153
                      ip_country: Perú
                      ip_country_code: PE
                      browser: null
                      device_fingerprint: null
                      device_type: null
      operationId: consultar-token
      description: >-
        Consultar el detalle de un [token](#operation/crear-token) utilizando su
        respectivo ID te permitirá obtener como respuesta el objeto token
        solicitado. Si la petición es inválida te devolveremos un
        [error.](#section/Errores)
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
    parameters:
      - schema:
          type: string
          example: tkn_live_LVNpj300apa78Pjq
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID del token a consultar.
    patch:
      tags:
        - Tokens
      summary: Actualizar Token
      operationId: actualizar-token
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                ejemplo 1:
                  value:
                    data: []
                    paging:
                      previous: null
                      next: null
                      cursors:
                        before: null
                        after: null
      description: >-
        Actualizar un token te permitirá agregar o reemplazar información a los
        valores de la metadata que enviaste a la hora de crearla. Cualquier
        parámetro o valor no provisto será omitido en los valores de la
        metadata.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  metadata:
                    order_id: '0001'
              properties:
                metadata:
                  type: object
                  description: Informacion adicional que se quiere enviar del token.
                  example:
                    dni: '5831543'
                    cliente_id: 259
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
  /v2/charges:
    post:
      tags:
        - Cargos
      summary: Crear cargo
      operationId: crear-cargo
      responses:
        '200':
          description: Se requieren parámetros 3DS.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    user_message: El usuario necesita autenticarse
                    action_code: REVIEW
        '201':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    duplicated: false
                    object: charge
                    id: chr_live_kEazTaQBDtzNdwFr
                    amount: 10000
                    amount_refunded: 0
                    current_amount: 10000
                    installments: 0
                    installments_amount: null
                    currency: PEN
                    email: null
                    description: null
                    source:
                      object: token
                      id: tkn_live_701ug3CDNJOAt5Q6
                      type: card
                      creation_date: 1487021247000
                      card_number: 411111******1111
                      last_four: '1111'
                      active: true
                      iin:
                        object: iin
                        bin: '411111'
                        card_brand: Visa
                        card_type: credit
                        card_category: Clásica
                        issuer:
                          name: JPMORGAN CHASE BANK, N.A.
                          country: United States
                          country_code: PE
                          website: null
                          phone_number: null
                        installments_allowed:
                          - 2
                          - 4
                          - 6
                          - 8
                          - 10
                          - 12
                      client:
                        ip: 190.235.231.153
                        ip_country: Perú
                        ip_country_code: PE
                        browser: null
                        device_fingerprint: null
                        device_type: null
                    fraud_score: null
                    antifraud_details:
                      country_code: null
                      first_name: null
                      last_name: null
                      address_city: null
                      address: null
                      email: richard@piedpiper.com
                      phone: null
                      object: client
                    date: 1487021262000
                    reference_code: kwd3glvhbs
                    fee: null
                    fee_details:
                      - type: comision_porcentual
                        amount: 375
                        taxes: 68
                        total_amount: 443
                        currency_code: PEN
                        object: fee
                    net_amount: 9557
                    response_code: venta_exitosa
                    merchant_message: La operación de venta ha sido autorizada exitosamente
                    user_message: Su compra ha sido exitosa.
                    device_ip: 190.235.231.153
                    device_country: null
                    country_ip: null
                    product: token
                    state: Exitosa
                    metadata: null
      description: >-
        Para realizar un cobro a una tarjeta de débito o crédito es necesario
        crear un cargo usando un Token o una Tarjeta. Si utilizas tu llave
        secreta de integración no se realizarán cargos reales, a diferencia del
        entorno de producción donde enviamos tu petición a los bancos y marcas
        procesadoras.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  amount: '10000'
                  currency_code: PEN
                  email: richard@piedpiper.com
                  source_id: tkn_live_0CjjdWhFpEAZlxlz
              properties:
                amount:
                  type: integer
                  description: Monto del cargo. Sin punto decimal.
                  example: 100.00 serían 10000
                  maximum: 999900
                  minimum: 300
                currency_code:
                  type: string
                  minLength: 1
                  description: Código de la moneda en tres letras (Formato ISO 4217).
                  enum:
                    - PEN
                    - USD
                email:
                  type: string
                  minLength: 5
                  description: Correo electrónico del cliente.
                  example: richard@piedpiper.com
                  maxLength: 50
                source_id:
                  type: string
                  description: >-
                    ID del objeto Token u objeto Tarjeta que se va usar para
                    realizar el cargo.
                  example: tkn_live_701ug3CDNJOAt5Q6, crd_live_TWsfemI22ypplGK6
                  minLength: 25
                  maxLength: 25
                capture:
                  type: boolean
                  description: >-
                    Indica si se va realizar la captura automática de la
                    tarjeta. Si no se considera por defecto tiene el valor de
                    "true"
                description:
                  type: string
                  description: Descripción del cargo a realizarse.
                  example: Prueba
                  minLength: 5
                  maxLength: 80
                installments:
                  type: string
                  description: >-
                    Cantidad de cuotas que se van a aplicar al pago. Estas
                    dependen de las cuotas aceptadas por el objeto token.
                  minLength: 2
                  maxLength: 48
                  example: 2
                metadata:
                  type: object
                  description: Informacion adicional que se quiere enviar del cargo
                  example:
                    dni: '70202170'
                antifraud_details:
                  type: object
                  description: >-
                    Datos de la persona que realiza la compra, para detectar
                    posibles fraudes.
                  properties:
                    address:
                      type: string
                      description: Direccion del cliente.
                      minLength: 5
                      maxLength: 100
                      example: Avenida Lima 213
                    address_city:
                      type: string
                      description: Ciudad del cliente
                      example: Lima
                      minLength: 2
                      maxLength: 30
                    country_code:
                      type: string
                      description: Código ISO-3166-1 (Alfa 2) del país del cliente.
                      example: PE
                    first_name:
                      type: string
                      description: Nombres del cliente
                      example: Richard
                      minLength: 2
                      maxLength: 50
                    last_name:
                      type: string
                      minLength: 2
                      maxLength: 50
                      description: Apellidos del cliente
                      example: Hendricks
                    phone_number:
                      type: string
                      description: Número de teléfono del cliente
                      minLength: 5
                      maxLength: 15
                      example: '999999987'
                authentication_3DS:
                  type: object
                  properties:
                    cavv:
                      type: string
                      example: AAABAWFlmQAAAABjRWWZEEFgFz+=
                      description: >-
                        Valor de verificación de autenticación del titular de la
                        tarjeta.
                    directoryServerTransactionId:
                      type: string
                      example: 88debec7-a798-46d1-bcfb-db3075fedb82
                      description: >-
                        El ID de transacción del servidor de directorio es
                        generado por el servidor de directorio de Mastercard
                        durante la transacción de autenticación y devuelto al
                        comerciante con los resultados de la autenticación.
                    eci:
                      type: string
                      example: '06'
                      description: >-
                        El indicador de comercio numérico que indica al banco el
                        grado de cambio de responsabilidad logrado durante el
                        proceso de autenticación del pagador.
                    protocolVersion:
                      type: string
                      description: ' Este campo contiene la versión de 3D Secure que se utilizó para procesar la transacción. Por ejemplo, 1.0.2 o 2.0.0.'
                      example: 2.1.0
              required:
                - amount
                - currency_code
                - email
                - source_id
            examples:
              example-1:
                value:
                  amount: '10000'
                  currency_code: PEN
                  email: richard@piedpiper.com
                  source_id: tkn_live_0CjjdWhFpEAZlxlz
    get:
      tags:
        - Cargos
      summary: Listar Cargos
      operationId: listar-cargo
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    data:
                      - ...
                    paging:
                      previous: >-
                        https://api.culqi.com/v2/charges?limit=50&before=chr_test_
                        3nKwGp5EGMA8fxaW
                      next: >-
                        https://api.culqi.com/v2/charges?limit=50&after=chr_test_3nKwG
                        p5EGMA8fxaW
                      cursors:
                        before: chr_test_3nKwGp5EGMA8fxaW
                        after: chr_test_3nKwGp5EGMA8fxaW
      description: >-
        Listar cargos te permitirá obtener una serie de cargos existentes, de
        acuerdo a los filtros que uses. Los cargos serán ordenados de acuerdo a
        su fecha de creación, siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
        - schema:
            type: string
            minLength: 300
            maxLength: 999900
            example: 500.00 sería 50000
          in: query
          name: amount
          description: Monto de los cargos en céntimos.
        - schema:
            type: string
            minLength: 300
            maxLength: 999900
            example: 100.00 sería 10000
          in: query
          name: min_amount
          description: Monto mínimo de los cargos en céntimos.
        - schema:
            type: string
            example: 100.00 sería 10000
            maxLength: 999900
            minLength: 300
          in: query
          name: max_amount
          description: Monto máximo de los cargos en céntimos.
        - schema:
            type: string
            minLength: 2
            maxLength: 48
            example: '4'
          in: query
          name: installments
          description: Cantidad de cuotas que se aplicaron al Cargo.
        - schema:
            type: string
            example: '8'
            minLength: 2
            maxLength: 48
          in: query
          name: min_installments
          description: Cantidad mínima de cuotas que se aplicaron al Cargo.
        - schema:
            type: string
            example: '48'
            minLength: 2
            maxLength: 48
          in: query
          name: max_installments
          description: Cantidad máxima de cuotas que se aplicaron al Cargo.
        - schema:
            type: string
          in: query
          name: currency_code
          description: >-
            Código de la moneda en la que se realizaron los cargos cargo en
            formato ISO 4217.
        - schema:
            type: string
          in: query
          name: fraud_score
          description: Score de fraude.
        - schema:
            type: string
          in: query
          name: min_fraud_score
          description: Score mínimo de fraude.
        - schema:
            type: string
          in: query
          name: max_fraud_score
          description: Score máximo de fraude.
        - schema:
            type: string
          in: query
          name: first_name
          description: Nombre.
        - schema:
            type: string
          in: query
          name: last_name
          description: Apellidos.
        - schema:
            type: string
          in: query
          name: email
          description: Correo electrónico.
        - schema:
            type: string
          in: query
          name: address
          description: Dirección.
        - schema:
            type: string
          in: query
          name: address_city
          description: Dirección de ciudad.
        - schema:
            type: string
          in: query
          name: phone_number
          description: Número telefónico.
        - schema:
            type: string
          in: query
          name: country_code
          description: Código de país.
        - schema:
            type: string
          in: query
          name: creation_date
          description: Fecha de creación.
        - schema:
            type: string
          in: query
          name: creation_date_from
          description: Fecha de creación desde.
        - schema:
            type: string
          in: query
          name: creation_date_to
          description: Fecha de creación hasta.
        - schema:
            type: string
          in: query
          name: capture_date
          description: Fecha de capture.
        - schema:
            type: string
          in: query
          name: capture_date_from
          description: Fecha de capture desde.
        - schema:
            type: string
          in: query
          name: capture_date_to
          description: Fecha de capture hasta.
        - schema:
            type: string
          in: query
          name: card_brand
          description: Marca de la tarjeta.
        - schema:
            type: string
          in: query
          name: card_type
          description: Tipo de tarjeta.
        - schema:
            type: string
          in: query
          name: bin
          description: primeros 6 números de la tarjeta.
        - schema:
            type: string
          in: query
          name: currency_code
          description: Código de moneda.
        - schema:
            type: string
          in: query
          name: captured
          description: confirmado.
        - schema:
            type: string
          in: query
          name: limit
          description: limite de la paginación, por defecto 50 registros.
        - schema:
            type: string
          in: query
          name: before
          description: parámetro before de paginación.
        - schema:
            type: string
          in: query
          name: after
          description: parámetro after de paginación.
      requestBody:
        content:
          application/json:
            schema:
              type: object
            examples:
              example-1: {}
        description: ''
    parameters: []
  /v2/charges/{id}:
    parameters:
      - schema:
          type: string
          example: chr_live_7VUwCneoG1XtLeS7
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID del cargo.
    get:
      summary: Consultar Cargo
      tags:
        - Cargos
      responses:
        '200':
          description: La petición fue exitosa.
      operationId: consultar-cargo
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
      description: >-
        Consultar el detalle de un cargo utilizando el ID devuelto en la
        petición de creación, esto te permitirá obtener como respuesta todos los
        parámetros del objeto cargo.
    patch:
      summary: Actualizar Cargo
      operationId: actualizar-cargo
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  metadata:
                    type: object
                    properties:
                      dni:
                        type: string
                        minLength: 1
                    required:
                      - dni
                required:
                  - metadata
                x-examples:
                  example-1:
                    metadata:
                      dni: '71702323'
              examples:
                example-1:
                  value:
                    metadata:
                      dni: '71702323'
      description: >-
        Actualizar un cargo te permitirá agregar o reemplazar información a los
        valores de la metadata que enviaste a la hora de crear un cargo.
        Cualquier parámetro o valor no provisto será omitido en la el valores de
        la metadata.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada](#section/Autenticacion)'
          required: true
      tags:
        - Cargos
  /v2/charges/{id}/capture:
    parameters:
      - schema:
          type: string
          minLength: 25
          maxLength: 25
          example: chr_live_7VUwCneoG1XtLeS7
        name: id
        in: path
        required: true
        description: ID del cargo a capturar.
    post:
      summary: Capturar Cargos
      operationId: capturar-cargo
      responses:
        '200':
          description: La petición fue exitosa.
      description: >-
        Esta operación permite capturar una transacción que se encuentra en
        estado "Autorizada", es decir que aún no ha sido capturada. Esta
        operación es la segunda mitad del flujo de pagos en dos pasos
        (autorización y captura) que sucede cuando creas un cargo con el
        parámetro de captura falso. Una vez que captures un cargo, empezará el
        proceso de transferencia de esa transacción a tu cuenta bancaria. En el
        caso que no captures un cargo en un periodo de 4 días, el cargo vencerá
        y los fondos serán devueltos inmediatamente a la tarjeta de tu cliente y
        el estado del cargo cambiará a "Devuelta".
      tags:
        - Cargos
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
  /v2/refunds:
    post:
      summary: Crear Devolución
      operationId: crear-devolucion
      responses:
        '201':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: ref_live_TTfLAgaA8nz8PWbO
                    charge_id: chr_live_TWsfemI22ypplGK6
                    amount: 5000
                    reason: Devolución solicitada por el comercio
                    creation_date: 1487039706000
                    object: refund
                    metadata: {}
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
      description: >-
        Para crear una devolución es necesario que envíes el ID del cargo que
        deseas devolver. Esta operación retorna los fondos a la tarjeta de
        crédito o débito de tu cliente y adicionalmente las comisión variable
        cargada por Culqi.


        Opcionalmente podrías devolver solo una parte del cargo, operación
        conocida como devolución parcial. Puedes hacerlo las veces que quieras
        hasta que el monto total del cargo haya sido devuelto por completo.
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  amount: 2000
                  charge_id: chr_live_7lYOtONQ9LxcgJUW
                  reason: fraudulento
              properties:
                amount:
                  type: integer
                  description: Monto de la devolución en céntimos.
                  example: 2000
                charge_id:
                  type: string
                  minLength: 1
                  description: ID del cargo a devolver.
                  example: chr_live_3xWxRF1Zswgp6C7N
                reason:
                  type: string
                  minLength: 1
                  description: >-
                    Razón o motivo de la devolución, es una cadena de texto
                    predefinida.
                  enum:
                    - duplicado
                    - fraudulento
                    - solicitud_comprador
              required:
                - amount
                - charge_id
                - reason
      tags:
        - Devoluciones
    get:
      summary: Listar Devoluciones
      operationId: listar-devolucion
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    data: []
                    paging:
                      previous: null
                      next: null
                      cursors:
                        before: null
                        after: null
      description: >-
        Listar devoluciones te permitirá obtener una serie de devoluciones
        existentes. De acuerdo a los filtros que uses, las devoluciones serán
        ordenados de acuerdo a su fecha de creación; siendo el primero el más
        reciente.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date
          description: Fecha de la devolución en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_from
          description: Fecha inicial de las devoluciones en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_to
          description: Fecha limite de las devoluciones en UNIX Timestamp
        - schema:
            type: string
            enum:
              - duplicado
              - fraudulento
              - solicitud_comprador
          in: query
          name: reason
          description: Razón o motivo de la devolución, es una cadena de texto predefinida.
        - schema:
            type: string
            example: '50'
            minLength: 1
            maxLength: 100
          in: query
          name: limit
          description: Cantidad exacta de devoluciones que se quieren listar.
        - schema:
            type: string
            example: ref_live_7lYOtONQ9LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: before
          description: >-
            El ID de la devolución desde donde se quiere traer la página
            anterior. No inclusivo.
        - schema:
            type: string
            example: ref_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID de la devolución desde donde se quiere traer la siguiente
            página. No inclusivo.
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: modification_date_from
          description: Fecha modificación de las devoluciones en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: modification_date_to
          description: Fecha modificación de las devoluciones en UNIX Timestamp
        - schema:
            type: string
            enum:
              - pendiente
              - rechazado
              - completado
            example: pendiente
          in: query
          name: status
          description: Estado de la devolución
      tags:
        - Devoluciones
  /v2/refunds/{id}:
    parameters:
      - schema:
          type: string
          example: ref_live_LVNpj300apa78Pjq
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID de la devolución a consultar.
    get:
      summary: Consultar Devolución
      tags:
        - Devoluciones
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: ref_live_TTfLAgaA8nz8PWbO
                    charge_id: chr_live_TWsfemI22ypplGK6
                    amount: 5000
                    reason: Devolución solicitada por el comercio
                    creation_date: 1487039706000
                    object: refund
                    metadata: {}
      operationId: consultar-devolucion
      description: >-
        Devuelve los detalles de una devolución en particular. Para la petición
        solo debes enviar el ID de la devolución que Culqi te devolvió a la hora
        de crear una Devolución.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada.](#section/Autenticacion)'
    patch:
      summary: Actualizar Devolución
      operationId: actualizar-devolucion
      responses:
        '200':
          description: La petición fue exitosa.
      tags:
        - Devoluciones
      description: >-
        Actualizar una devolución te permitirá agregar o reemplazar información
        a los valores de la metadata que enviaste a la hora de crear una
        devolución. Cualquier parámetro o valor no provisto será omitido en la
        el valores de la metadata.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada.](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  metadata:
                    dni: '71702323'
              properties:
                metadata:
                  type: object
                  example:
                    dni: '71702323'
              required:
                - metadata
            examples:
              example-1:
                value:
                  metadata:
                    dni: '71702323'
  /v2/customers:
    get:
      summary: Listar Clientes
      tags:
        - Clientes
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    data:
                      - ...
                    paging:
                      previous: >-
                        https://api.culqi.com/v2/customers?limit=50&before=cus_live_
                        Psny4smwxpmEDooU
                      next: >-
                        https://api.culqi.com/v2/customers?limit=50&after=cus_live_Lz6Yf
                        sm7QqCPIECW
                      cursors:
                        before: cus_live_Psny4smwxpmEDooU
                        after: cus_live_Lz6Yfsm7QqCPIECW
      operationId: listar-cliente
      description: >-
        Listar Clientes te permitirá obtener una serie de Customer existentes.
        De acuerdo a los filtros que uses, los clientes serán ordenados de
        acuerdo a su fecha de creación; siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
        - schema:
            type: string
            minLength: 2
            maxLength: 50
            example: Richard
          in: query
          name: first_name
          description: Nombre del cliente.
        - schema:
            type: string
            example: Hendricks
            minLength: 2
            maxLength: 50
          in: query
          name: last_name
          description: Apellido del cliente.
        - schema:
            type: string
            minLength: 5
            maxLength: 50
            example: richard@piedpiper.com
          in: query
          name: email
          description: Correo electrónico del cliente.
        - schema:
            type: string
            minLength: 5
            maxLength: 100
            example: San Francisco Bay
          in: query
          name: address
          description: Dirección física del cliente.
        - schema:
            type: string
            example: San Francisco
            minLength: 5
            maxLength: 15
          in: query
          name: address_city
          description: Ciudad del cliente.
        - schema:
            type: string
            example: '3383478'
            minLength: 5
            maxLength: 15
          in: query
          name: phone_number
          description: Teléfono del cliente.
        - schema:
            type: string
            example: PE
          in: query
          name: country_code
          description: Código del país, en formato ISO-3166 (Alfa 2).
        - schema:
            type: string
            minLength: 1
            example: '50'
            maxLength: 100
          in: query
          name: limit
          description: Cantidad exacta de clientes que se quieren listar.
        - schema:
            type: string
            example: cus_live_7lYOtONQ9LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: before
          description: >-
            El ID del cliente desde donde se quiere traer los resultados
            anteriores. No inclusivo.
        - schema:
            type: string
            example: cus_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID del cliente desde donde se quiere traer los resultados
            siguientes. No inclusivo.
    post:
      summary: Crear Cliente
      operationId: crear-cliente
      responses:
        '201':
          description: La petición fue exitosa.
      description: >-
        Crea un cliente enviando los datos de tu cliente y más datos
        relacionados al mismo a través de los valores de metadata.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  first_name: Richard
                  last_name: Hendricks
                  email: richard@piedpiper.com
                  address: San Francisco Bay Area
                  address_city: Palo Alto
                  country_code: US
                  phone_number: '6505434800'
              properties:
                address:
                  type: string
                  description: Dirección del cliente.
                  example: Av. Brasil 123
                  minLength: 2
                  maxLength: 50
                address_city:
                  type: string
                  description: Ciudad del cliente
                  minLength: 2
                  maxLength: 50
                  example: Lima
                country_code:
                  type: string
                  minLength: 1
                  description: Código ISO-3166-1 (Alfa 2) del país del cliente.
                  example: PE
                email:
                  type: string
                  description: Correo electrónico del cliente
                  minLength: 5
                  maxLength: 50
                  example: richard@piedpiper.com
                  format: email
                first_name:
                  type: string
                  description: Nombre del cliente.
                  example: Richard
                  minLength: 2
                  maxLength: 50
                last_name:
                  type: string
                  description: Apellido del cliente.
                  example: Hendricks
                  minLength: 2
                  maxLength: 50
                phone_number:
                  type: string
                  description: Teléfono del cliente.
                  example: '6505434800'
                  minLength: 5
                  maxLength: 15
                metadata:
                  type: object
                  description: >-
                    Informacion adicional que se requiera enviar al crear el
                    plan.
                  example:
                    codigo_alumno: 0001A
              required:
                - address
                - address_city
                - country_code
                - email
                - first_name
                - last_name
                - phone_number
            examples:
              example-1:
                value:
                  first_name: Richard
                  last_name: Hendricks
                  email: richard@piedpiper.com
                  address: San Francisco Bay Area
                  address_city: Palo Alto
                  country_code: US
                  phone_number: '6505434800'
      tags:
        - Clientes
  /v2/customers/{id}:
    parameters:
      - schema:
          type: string
          minLength: 25
          maxLength: 25
          example: cus_live_QDO81GT6Zaseewkp
        name: id
        in: path
        required: true
        description: ID del cliente.
    get:
      summary: Consultar Cliente
      tags:
        - Clientes
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: customer
                    id: cus_live_Lz6Yfsm7QqCPIECW
                    creation_date: 1487041774773
                    email: richard@piedpiper.com
                    antifraud_details:
                      country_code: US
                      first_name: Richard
                      last_name: Richard
                      address_city: Palo Alto
                      address: San Francisco Bay Area
                      email: null
                      phone: '6505434800'
                      object: client
      operationId: consultar-cliente
      description: >-
        Devuelve los detalles de un cliente en particular. En la petición solo
        debes enviar el ID del cliente que Culqi te devolvió a la hora de crear
        uno.
      parameters:
        - schema:
            type: string
            default: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
    patch:
      summary: Actualizar Cliente
      operationId: actualizar-cliente
      responses:
        '200':
          description: OK
      description: >-
        Actualizar un cliente te permitirá modificar los valores enviados a la
        hora de crearlo. Cualquier parámetro que no sea proveído en la petición
        mantendrá el valor de la creación.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada.](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              example-1:
                value:
                  metadata:
                    dni: '71702323'
          application/xml:
            schema:
              description: ''
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    dni:
                      type: string
                      minLength: 1
                  required:
                    - dni
              required:
                - metadata
              x-examples:
                example-1:
                  metadata:
                    dni: '71702323'
        description: ''
      tags:
        - Clientes
    delete:
      summary: Eliminar Cliente
      operationId: eliminar-cliente
      responses:
        '200':
          description: Petición exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    id: cus_live_LbB0x6yB2Pd0JJnP
                    deleted: true
                    merchant_message: >-
                      Se eliminó el cliente con ID cus_live_LbB0x6yB2Pd0JJnP
                      exitosamente.
      description: >-
        Elimina de manera permanente a un cliente. Esta operación cancela
        cualquier cargo posterior o suscripción que esté relacionada con el
        Cliente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
      tags:
        - Clientes
  /v2/plans:
    parameters: []
    get:
      summary: Listar Planes
      tags:
        - Planes
      responses:
        '200':
          description: La petición fue exitosa
      operationId: listar-plan
      description: >-
        Listar planes te permitirá obtener una serie de planes existentes. De
        acuerdo a los filtros que uses los planes serán ordenados de acuerdo a
        la fecha de creación, siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave_privada](#section/Autenticacion)'
        - schema:
            type: integer
            example: Prueba
            minLength: 300
            maxLength: 999900
            minimum: 300
            maximum: 999900
          in: query
          name: amount
          description: Monto de los planes en céntimos.
        - schema:
            type: integer
            example: 100.00 sería 10000
            minLength: 300
            maxLength: 999900
            minimum: 300
            maximum: 999900
          in: query
          name: min_amount
          description: Monto mínimo de los planes en céntimos.
        - schema:
            type: integer
            example: 100.00 sería 10000
            minimum: 300
            maximum: 999900
          in: query
          name: max_amount
          description: Monto máximo de los planes en céntimos.
        - schema:
            type: string
            minLength: 5
            maxLength: 15
            example: '34343443434'
          in: query
          name: creation_date_from
          description: Fecha inicial de los planes en UNIX Timestamp
        - schema:
            type: string
            minLength: 5
            maxLength: 15
            example: '34343443434'
          in: query
          name: creation_date_to
          description: Fecha limite de los planes en UNIX Timestamp
        - schema:
            type: integer
            minimum: 1
            maximum: 100
            example: 50
          in: query
          name: limit
          description: Cantidad exacta de planes que se quieren listar.
        - schema:
            type: string
            minLength: 25
            maxLength: 25
            example: pln_live_7lYOtONQ9LxcgJUW
          in: query
          name: before
          description: >-
            El ID del plan desde donde se quiere traer los resultados
            anteriores. No inclusivo.
        - schema:
            type: string
            example: pln_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID del plan desde donde se quiere traer los resultados
            siguientes. No inclusivo.
    post:
      summary: Crear Plan
      operationId: crear-plan
      responses:
        '201':
          description: La petición fue exitosa
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  object:
                    type: string
                    minLength: 1
                  id:
                    type: string
                    minLength: 1
                  creation_date:
                    type: number
                  name:
                    type: string
                    minLength: 1
                  amount:
                    type: number
                  currency_code:
                    type: string
                    minLength: 1
                  interval_count:
                    type: number
                  interval:
                    type: string
                    minLength: 1
                  limit:
                    type: number
                  trial_days:
                    type: number
                  total_subscriptions:
                    type: number
                  metadata:
                    type: object
                    properties: {}
                    required: []
                required:
                  - object
                  - id
                  - creation_date
                  - name
                  - amount
                  - currency_code
                  - interval_count
                  - interval
                  - limit
                  - trial_days
                  - total_subscriptions
                  - metadata
                x-examples:
                  example-1:
                    object: plan
                    id: pln_live_uvBzalwuY3UsxJ9l
                    creation_date: 1556569427000
                    name: Hooli Subscription
                    amount: 2000
                    currency_code: PEN
                    interval_count: 1
                    interval: Meses
                    limit: 0
                    trial_days: 0
                    total_subscriptions: 0
                    metadata: {}
      description: >-
        Esta operación te permitirá configurar los detalles del plan para que
        puedas realizar cargos recurrentes. Adicionalmente podrás hacer esta
        operación vía el Panel de Culqi.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave_privada](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  name: Hooli Subscription
                  amount: 2000
                  currency_code: PEN
                  interval: meses
                  interval_count: 1
                  limit: 12
              properties:
                name:
                  type: string
                  description: |-
                    Nombre del plan.

                    Ejemplo: "Mi primer plan Básico"
                  example: '"Mi primer plan Básico"'
                  minLength: 2
                  maxLength: 50
                amount:
                  type: number
                  description: |-
                    Monto del plan a cobrar recurrentemente. Sin punto decimal

                    Ejemplo: 100.00 serían 10000
                  example: 100.00 serían 10000
                  minimum: 300
                  maximum: 999900
                currency_code:
                  type: string
                  minLength: 1
                  description: |
                    Código de la moneda en tres letras (Formato ISO 4217).

                    Ejemplo: "PEN", "USD"
                  example: '"PEN", "USD"'
                interval:
                  type: string
                  minLength: 1
                  example: 'Valores permitidos: dias, semanas, meses, años,'
                  maxLength: 7
                  description: >-
                    Cantidad de cada cuanto se deben ejecutar los cargos del
                    plan. Si en 'interval' pusimos "meses", poner valor 1 en
                    este campo hará que se cobre cada mes.
                interval_count:
                  type: number
                  description: >-
                    Cantidad de cada cuanto se deben ejecutar los cargos del
                    plan. Si en 'interval' pusimos "meses", poner valor 1 en
                    este campo hará que se cobre cada mes.


                    Ejemplo: 1
                  example: 1
                  minimum: 1
                  maximum: 999
                trial_days:
                  type: integer
                  description: |-
                    Número de días del periodo de prueba (sin costo).

                    Ejemplo: "5
                  example: '"5"'
                  minimum: 1
                  maximum: 99
                limit:
                  type: number
                  description: >-
                    Limite de cargos a realizar (ciclos). Si no se define, es
                    automáticamente sin límite.


                    Ejemplo: "12"
                  example: '"12"'
                  minimum: 2
                  maximum: 99
                metadata:
                  type: object
                  description: >
                    Informacion adicional que se requiera enviar al crear el
                    plan.


                    Example: {"descripcion" : "Este es un plan para poder
                    agruparlos a todos."}
              required:
                - name
                - amount
                - currency_code
                - interval
                - interval_count
            examples:
              example-1:
                value: {}
      tags:
        - Planes
  /v2/plans/{id}:
    parameters:
      - schema:
          type: string
          minLength: 25
          maxLength: 25
          example: '"pln_live_QDO81GT6Zaseewkp"'
        name: id
        in: path
        required: true
        description: ID del plan a consultar
    get:
      summary: Consultar Plan
      tags:
        - Planes
      responses:
        '200':
          description: La petición fue exitosa
      operationId: consultar-plan
      description: >-
        Devuelve los detalles de un Plan en particular. Para la petición solo
        debes enviar el ID del Plan que Culqi te devolvió a la hora de crearlo.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave_privada](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: ''
    patch:
      summary: Actualizar Plan
      operationId: actualizar-plan
      responses:
        '200':
          description: La petición fue exitosa
      description: >-
        Actualizar un plan te permitirá agregar o reemplazar información a los
        valores de la metadata que enviaste a la hora de crearla. Cualquier
        parámetro o valor no provisto será omitido en los valores de la
        metadata.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave_privada](#section/Autenticacion)'
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  metadata:
                    descripcion: Plan inicial.
              properties:
                metadata:
                  type: object
                  required:
                    - descripcion
                  description: |-
                    Información adicional del plan a modificar

                    Example: "{"descripcion"=>"Este es un plan simple."}"
                  properties:
                    descripcion:
                      type: string
                      minLength: 1
              required:
                - metadata
      tags:
        - Planes
    delete:
      summary: Eliminar Plan
      operationId: eliminar-plan
      responses:
        '200':
          description: La petición fue exitosa
      description: >-
        Elimina de manera permanente un Plan. Esta operación cancela todas las
        suscripciones relacionadas con el Plan.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave_privada](#section/Autenticacion)'
      tags:
        - Planes
  /v2/cards:
    post:
      summary: Crear Tarjeta
      operationId: crear-tarjeta
      responses:
        '201':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: card
                    id: crd_live_RzjTyGUwZioJLpZt
                    date: 1487044833972
                    customer_id: cus_live_Lz6Yfsm7QqCPIECW
                    token:
                      object: token
                      id: tkn_live_vEcZSCOVz5PGDPdQ
                      type: card
                      creation_date: 1487044809000
                      card_number: 411111******1111
                      last_four: '1111'
                      active: true
                      iin:
                        object: iin
                        bin: '411111'
                        card_brand: Visa
                        card_type: credit
                        card_category: Clásica
                        issuer:
                          name: JPMORGAN CHASE BANK, N.A.
                          country: United States
                          country_code: PE
                          website: null
                          phone_number: null
                        installments_allowed:
                          - 2
                          - 4
                          - 6
                          - 8
                          - 10
                          - 12
                      client:
                        ip: 190.235.231.153
                        ip_country: Perú
                        ip_country_code: PE
                        browser: null
                        device_fingerprint: null
                        device_type: null
                    metadata: {}
      description: >-
        A la hora de crear una Tarjeta tendrás que relacionar un token con un
        Cliente que has creado anteriormente para que este pueda ser utilizado
        para pagos posteriores y suscripciones.
      tags:
        - Tarjetas
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  customer_id: cus_live_Lz6Yfsm7QqCPIECW
                  token_id: tkn_live_vEcZSCOVz5PGDPdQ
              properties:
                customer_id:
                  type: string
                  minLength: 25
                  maxLength: 25
                  description: ID de la tarjeta a enlazar a la tarjeta.
                  example: cus_live_Lz6Yfsm7QqCPIECW
                token_id:
                  type: string
                  description: ID del token generado al Crear Token.
                  example: tkn_live_vEcZSCOVz5PGDPdQ
                  minLength: 25
                  maxLength: 25
                validate:
                  type: boolean
                  default: true
                  description: >-
                    Indica si se debe realizar una validación a la tarjeta, es
                    decir, Culqi crea un cargo mínimo (3 PEN) y lo devuelve
                    inmediatamente. Si no se considera el parametro, por defecto
                    tiene un valor true.
                metadata:
                  type: object
                  description: >-
                    Informacion adicional que se requiera enviar al crear la
                    tarjeta.
                  example:
                    marca_tarjeta: VISA
              required:
                - customer_id
                - token_id
    get:
      summary: Listar Tarjetas
      operationId: listar-tarjeta
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    data:
                      - ...
                    paging:
                      previous: >-
                        https://api.culqi.com/v2/cards?limit=50&before=crd_live_RzjT
                        yGUwZioJLpZt
                      next: >-
                        https://api.culqi.com/v2/cards?limit=50&after=crd_live_Z1YXhVdg6
                        0B0UCLI
                      cursors:
                        before: crd_live_RzjTyGUwZioJLpZt
                        after: crd_live_Z1YXhVdg60B0UCLI
      tags:
        - Tarjetas
      description: >-
        Listar Tarjetas te permitirá obtener una serie de Tarjetas existentes.
        De acuerdo a los filtros que uses, las tarjetas serán ordenados de
        acuerdo a su fecha de creación; siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada.](#section/Autenticacion)'
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date
          description: Fecha de la tarjeta en UNIX Timestamp.
        - schema:
            type: string
            example: '1476132639'
            minLength: 5
            maxLength: 15
          in: query
          name: creation_date_from
          description: Fecha inicial de las tarjetas en UNIX Timestamp.
        - schema:
            type: string
            example: '1476132639'
            minLength: 5
            maxLength: 15
          in: query
          name: creation_date_to
          description: Fecha limite de las tarjetas en UNIX Timestamp.
        - schema:
            type: string
            enum:
              - Visa
              - Mastercard
              - Amex
              - Diners
          in: query
          name: card_brand
          description: Marca de la tarjeta.
        - schema:
            type: string
            enum:
              - credito
              - debito
              - prepagada
          in: query
          name: card_type
          description: Tipo de la tarjeta a consultar.
        - schema:
            type: string
            enum:
              - escritorio
              - movil
              - tablet
          in: query
          name: device_type
          description: Tipo de dispositivo.
        - schema:
            type: string
            example: '411111'
            minLength: 5
            maxLength: 15
          in: query
          name: bin
          description: Son los primeros seis dígitos del número de tarjeta.
        - schema:
            type: string
            example: PE
          in: query
          name: country_code
          description: Código del país, en formato ISO-3166 (Alfa 2).
        - schema:
            type: string
            example: '50'
            minLength: 1
            maxLength: 100
          in: query
          name: limit
          description: Cantidad exacta de clientes que se quieren listar.
        - schema:
            type: string
            minLength: 25
            maxLength: 25
            example: crd_live_7lYOtONQ9LxcgJUW
          in: query
          name: before
          description: >-
            El ID de la tarjeta desde donde se quiere traer los resultados
            anteriores. No inclusivo.
        - schema:
            type: string
            example: crd_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID de la tarjeta desde donde se quiere traer los resultados
            siguientes. No inclusivo..
  /v2/cards/{id}:
    parameters:
      - schema:
          type: string
          minLength: 25
          maxLength: 25
          example: crd_live_QDO81GT6Zaseewkp
        name: id
        in: path
        required: true
        description: ID de la tarjeta.
    get:
      summary: Consultar Tarjeta
      tags:
        - Tarjetas
      responses:
        '200':
          description: La petición fue exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: card
                    id: crd_live_RzjTyGUwZioJLpZt
                    date: 1487044833972
                    customer_id: cus_live_Lz6Yfsm7QqCPIECW
                    token:
                      object: token
                      id: tkn_live_vEcZSCOVz5PGDPdQ
                      type: card
                      creation_date: 1487044809000
                      card_number: 411111******1111
                      last_four: '1111'
                      active: true
                      iin:
                        object: iin
                        bin: '411111'
                        card_brand: Visa
                        card_type: credit
                        card_category: Clásica
                        issuer:
                          name: JPMORGAN CHASE BANK, N.A.
                          country: United States
                          country_code: PE
                          website: null
                          phone_number: null
                        installments_allowed:
                          - 2
                          - 4
                          - 6
                          - 8
                          - 10
                          - 12
                      client:
                        ip: 190.235.231.153
                        ip_country: Perú
                        ip_country_code: PE
                        browser: null
                        device_fingerprint: null
                        device_type: null
                    metadata: null
      operationId: consultar-tarjeta
      description: >-
        Consultar el detalle de una tarjeta utilizando el ID devuelto en la
        petición para crear una Tarjeta, te permitirá obtener como respuesta
        todos los parámetros de esta. Si la petición es inválida te devolveremos
        un error.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada](#section/Autenticacion)'
    patch:
      summary: Actualizar Tarjeta
      operationId: actualizar-tarjeta
      responses:
        '200':
          description: Petición fue exitosa.
      description: >-
        Actualizar una Tarjeta te permitirá agregar o reemplazar información a
        los valores de la metadata que enviaste a la hora de crearla. Cualquier
        parámetro o valor no provisto será omitido en los valores de la
        metadata. Actualmente, también permite actualizar el **ID del token
        asociado.**
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
          required: true
        - schema:
            type: string
          in: header
          name: Authorization
          description: '[Llave privada.](#section/Autenticacion)'
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token_id:
                  type: string
                  description: >-
                    ID del token nuevo a actualizar en la Tarjeta, este es
                    generado previamente en Crear Token.
                  example: tkn_live_vEcZSCOVz5PGDPdQ
                  minLength: 25
                  maxLength: 25
                metadata:
                  type: object
                  example:
                    dni: '71701978'
            examples:
              example-1:
                value:
                  metadata:
                    dni: '71702323'
      tags:
        - Tarjetas
    delete:
      summary: Eliminar Tarjeta
      operationId: eliminar-tarjeta
      responses:
        '200':
          description: La petición fue exitosa.
      description: >-
        Eliminar una Tarjeta te permitirá limpiar la cantidad de tarjetas
        asociadas a un Customer por varios motivos: la tarjeta superó la
        cantidad de denegaciones esperadas o el cliente es fraudulento y no
        quieres realizar más cobros a ese cliente, prevenir que tus clientes no
        paguen una suscripción de la que se han retirado, entre otras cosas. La
        petición devuelva el objeto Card eliminado.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: '[Llave privada.](#section/Autenticacion)'
      tags:
        - Tarjetas
  /v2/subscriptions:
    parameters: []
    get:
      summary: Listar Suscripciones
      tags:
        - Suscripciones
      responses:
        '200':
          description: La petición fue exitosa
          content:
            application/json:
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
      operationId: listar-suscripcion
      description: >-
        Listar suscripciones te permitirá obtener una serie de suscripciones
        existentes. De acuerdo a los filtros que uses, las diferentes
        suscripciones serán ordenadas de acuerdo a su fecha de creación; siendo
        el primero el más reciente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
        - schema:
            type: string
            example: '2000'
            minLength: 300
            maxLength: 9999900
          in: query
          name: amount
          description: Monto de los planes asociados a las suscripciones
        - schema:
            type: string
            example: '2000'
            minLength: 300
            maxLength: 9999900
          in: query
          name: min_amount
          description: Monto mínimo de los planes asociados a las suscripciones
        - schema:
            type: string
            example: '4000'
            minLength: 300
            maxLength: 9999900
          in: query
          name: max_amount
          description: Monto máximo de los planes asociados a las suscripciones
        - schema:
            type: string
            example: '1476132639'
            format: date
          in: query
          name: date
          description: Fecha de la suscripción en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
            format: date
          in: query
          name: date_from
          description: Fecha inicial de las suscripciones en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
            format: date
          in: query
          name: date_to
          description: Fecha limite de las suscripciones en UNIX Timestamp
        - schema:
            type: string
            example: 'Valores permitidos: Dias, Semanas, Meses, Años,'
          in: query
          name: interval
          description: Intervalo de los planes asociados a las suscripciones
        - schema:
            type: string
            example: Activa, Cancelada, Finalizada,
          in: query
          name: status
          description: Estado de las suscripciones  Valores permitidos
        - schema:
            type: string
            example: '50'
            minLength: 1
            maxLength: 100
          in: query
          name: limit
          description: Cantidad exacta de suscripciones que se quieren listar.
        - schema:
            type: string
            example: sub_live_7lYOtONQ9LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: before
          description: >-
            El ID de la suscripción desde donde se quiere traer la página
            anterior. No inclusivo.
        - schema:
            type: string
            minLength: 25
            maxLength: 25
            example: sub_live_7lYOtOMM6LxcgJUW
          in: query
          name: after
          description: >-
            El ID de la suscripción desde donde se quiere traer la siguiente
            página. No inclusivo.
    post:
      summary: Crear Suscripción
      operationId: crear-suscripcion
      responses:
        '201':
          description: La petición fue exitosa
      description: >-
        Esta operación relaciona la tarjeta de un cliente con un plan de
        cobranza recurrente creado anteriormente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  card_id: crd_live_b3MMECR8cJ5tZqf2
                  plan_id: pln_live_jwOAYnxX49o2ydWv
              properties:
                card_id:
                  type: string
                  example: '"crd_live_b3MMECR8cJ5tZqf2"'
                  minLength: 25
                  maxLength: 25
                  description: ID de la tarjeta.
                plan_id:
                  type: string
                  description: ID del plan.
                  example: '"pln_live_jwOAYnxX49o2ydWv"'
                  minLength: 25
                  maxLength: 25
                metadata:
                  type: object
                  description: >-
                    Información adicional de la suscripción


                    Example: {"cliente_id": "256", "documento_identidad":
                    "000551487"}
              required:
                - card_id
                - plan_id
        description: ''
      tags:
        - Suscripciones
  /v2/subscriptions/{id}:
    parameters:
      - schema:
          type: string
          minLength: 25
          maxLength: 25
          example: '"sub_live_0CjjdWhFpEAZlxlz"'
        name: id
        in: path
        required: true
        description: ID de la suscripcion a consultar.
    get:
      summary: Consultar Suscripción
      tags:
        - Suscripciones
      responses:
        '200':
          description: La petición fue exitosa
      operationId: consultar-suscripcion
      description: >-
        Devuelve los detalles de una Suscripción en particular. Para la petición
        solo debes enviar el ID de la Suscripción que Culqi te devolvió a la
        hora de crearlo.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
    patch:
      summary: Actualizar Suscripción
      operationId: actualizar-suscripcion
      responses:
        '200':
          description: La petición fue exitosa
      description: >-
        Actualizar una suscripción te permitirá agregar o reemplazar información
        a los valores de la metadata que enviaste a la hora de crearla.
        Cualquier parámetro o valor no provisto será omitido en los valores de
        la metadata.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  metadata:
                    dni: '71702323'
              properties:
                metadata:
                  type: object
                  required:
                    - dni
                  description: >-
                    Información adicional de la suscripción a modificar


                    Example: {"cliente_id": "259", "documento_identidad":
                    "000551337"}
                  properties:
                    dni:
                      type: string
                      minLength: 1
              required:
                - metadata
      tags:
        - Suscripciones
    delete:
      summary: Cancelar Suscripción
      operationId: cancelar-suscripcion
      responses:
        '200':
          description: La pertición fue exitosa
      description: >-
        Esta operación permite cancelar la suscripción a una tarjeta para que el
        cliente no vuelva a ser cobrado nuevamente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      tags:
        - Suscripciones
  /v2/orders:
    parameters: []
    get:
      summary: Listar órdenes
      tags:
        - Ordenes
      responses:
        '200':
          description: La petición fue exitosa
          content:
            application/json:
              examples:
                Example-1:
                  value:
                    data:
                      - ...
                    paging:
                      previous: >-
                        https://api.culqi.com/v2/orders?limit=50&before=crd_live_RzjT
                        yGUwZioJLpZt
                      next: >-
                        https://api.culqi.com/v2/orders?limit=50&after=crd_live_Z1YXhVdg6
                        0B0UCLI
                      cursors:
                        before: ord_live_RzjTyGUwZioJLpZt
                        after: ord_live_Z1YXhVdg60B0UCLI
      operationId: listar-orden
      description: >-
        Listas órdenes permtie obtener el listado de órdenes de tu comercio. De
        acuerdo a los filtros que uses, las ordenes serán ordenados de acuerdo a
        su fecha de creación; siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
        - schema:
            type: integer
            minimum: 100
            maximum: 999900
            example: 50.00 sería 5000
          in: query
          name: amount
          description: Monto de la orden en céntimos.
        - schema:
            type: integer
            example: 100.00 sería 10000
          in: query
          name: min_amount
          description: Monto mínimo de los cargos en céntimos.
        - schema:
            type: integer
            minimum: 100
            maximum: 999900
            example: 100.00 sería 10000
          in: query
          name: max_amount
          description: Monto máximo de los cargos en céntimos.
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date
          description: Fecha de la tarjeta en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_from
          description: Fecha inicial de las tarjetas en UNIX Timestamp
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_to
          description: Fecha limite de las tarjetas en UNIX Timestamp
        - schema:
            type: string
            example: created, pending, paid, expired, deleted,
          in: query
          name: state
          description: 'Estado de la orden a consultar  Valores permitidos:'
        - schema:
            type: integer
            example: 50
            minimum: 1
            maximum: 100
          in: query
          name: limit
          description: Cantidad exacta de ordenes que se quieren listar.
        - schema:
            type: string
            minLength: 25
            maxLength: 25
            example: ord_live_7lYOtONQ9LxcgJUW
          in: query
          name: before
          description: >-
            El ID de la orden desde donde se quiere traer los resultados
            anteriores. No inclusivo.
        - schema:
            type: string
            example: ord_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID de la orden desde donde se quiere traer los resultados
            siguientes. No inclusivo.
    post:
      summary: Crear Orden
      operationId: crear-orden
      responses:
        '201':
          description: La petición fue exitosa
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: order
                    id: ord_live_xjmEW4dIyJM9G4cc
                    amount: 6000
                    payment_code: '13642064'
                    currency_code: PEN
                    description: Venta de polo
                    order_number: '#id-9999'
                    state: pending
                    total_fee: null
                    net_amount: null
                    fee_details: null
                    creation_date: 1538540487
                    expiration_date: 1538540700
                    updated_at: null
                    paid_at: null
                    available_on: null
                    metadata: null
                    qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
                    cuotealo: url de cuotéalo
      description: >-
        La creación de una orden permite que se genere un objeto orden con los
        detalles de la posible venta. Esta orden nace con un estado pendiente de
        pago. Además, al momento de la creación tu cliente recibe un correo con
        las instrucciones de como pagar la orden.


        <div class="box info"><div class="content">Si una orden es creada con el
        parametro confirm en false, esta tendrá que ser confirmada
        inmediatamente con el método Confirmar orden. De lo contrario, la orden
        no podrá ser pagada por tu cliente. Se recomienda crearla sin incluir el
        parámetro 'confirm'' para que siga el flujo natural.</div></div>
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  amount: 1000
                  currency_code: PEN
                  description: Venta de prueba
                  order_number: pedido-9999
                  client_details:
                    first_name: Richard
                    last_name: Hendricks
                    email: richard@piedpiper.com
                    phone_number: '+51945145288'
                  expiration_date: 1538772846
              properties:
                amount:
                  type: integer
                  description: Monto de la orden. Sin punto decimal.
                  example: 600.00 serían 60000
                  minimum: 600
                  maximum: 999900
                currency_code:
                  type: string
                  minLength: 1
                  description: Código de la moneda en tres letras (Formato ISO 4217).
                  example: PEN
                description:
                  type: string
                  description: Descripcion de la orden
                  example: ' Venta de polo'
                  minLength: 5
                  maxLength: 80
                order_number:
                  type: string
                  minLength: 1
                  description: Numero que identifica a la orden. Debe ser unico
                  example: '"#id-9999"'
                  maxLength: 36
                expiration_date:
                  type: string
                  description: Fecha de expiracion de la orden. Debe ser una fecha futura.
                  example: '"1476132639"'
                  format: time
                client_details:
                  type: object
                  required:
                    - confirm
                    - metadata
                  description: "\t\nDatos de la persona que realiza la compra."
                  properties:
                    confirm:
                      type: boolean
                      description: "\t\nIndica si se debe confirmar la orden. Por defecto tiene un valor true.\n\nExample: true"
                    metadata:
                      type: object
                      description: >-
                        Informacion adicional que se requiera enviar al crear la
                        orden.


                        Example: "{dni"=>"71702999"}"
              required:
                - amount
                - currency_code
                - description
                - order_number
                - expiration_date
                - client_details
      tags:
        - Ordenes
  /v2/orders/{id}/confirm:
    post:
      summary: Confirmar orden
      operationId: confirmar-orden
      responses:
        '200':
          description: La peticioón fue exitosa
          content:
            application/json:
              examples:
                New User Bob Fellow:
                  value:
                    object: order
                    id: ord_live_xjmEW4dIyJM9G4cc
                    amount: 6000
                    payment_code: '13642064'
                    currency_code: PEN
                    description: Venta de polo
                    order_number: '#id-9999'
                    state: pending
                    total_fee: null
                    net_amount: null
                    fee_details: null
                    creation_date: 1538540487
                    expiration_date: 1538540700
                    updated_at: null
                    paid_at: null
                    available_on: null
                    metadata: null
                    qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
                    cuotealo: url de cuotéalo
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      description: >-
        El uso de este método es opcional. Confirmar una orden permite que una
        orden se habilite para ser pagada, generandole un código de pago y
        pasando a estado "pendiente". Solo se puede usar este método cuando la
        orden se encuentra en estado "creada".
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      tags:
        - Ordenes
    parameters:
      - schema:
          type: string
          example: '"ord_live_0CjjdWhFpEAZlxlz"'
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID de la orden a confirmar.
  /v2/orders/confirm:
    post:
      summary: Confirmar tipo de Orden
      operationId: confirmar-tipo-orden
      responses:
        '200':
          description: Petición exitosa.
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: order
                    id: ord_live_xjmEW4dIyJM9G4cc
                    amount: 6000
                    payment_code: '13642064'
                    currency_code: PEN
                    description: Venta de polo
                    order_number: '#id-9999'
                    state: pending
                    total_fee: null
                    net_amount: null
                    fee_details: null
                    creation_date: 1538540487
                    expiration_date: 1538540700
                    updated_at: null
                    paid_at: null
                    available_on: null
                    metadata: null
                    qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
                    cuotealo: url de cuotéalo
      description: >-
        El uso de este método es opcional. Confirmar una orden permite que una
        orden se habilite para ser pagada, generandole un código de pago y
        pasando a estado "pendiente". Solo se puede usar este método cuando la
        orden se encuentra en estado "creada".
      parameters:
        - schema:
            type: string
            enum:
              - application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          description: Llave privada.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  id: ord_live_xjmEW4dIyJM9G4cc
                  order_types:
                    - cuotealo
                    - cip
              properties:
                id:
                  type: string
                  description: ID de la orden a confirmar.
                order_types:
                  type: array
                  description: >-
                    Es el medio de confirmación de cuotéalo y cip. Pueden ser
                    ambas o una de ellas.
                  items:
                    type: string
              required:
                - id
                - order_types
            examples:
              example-1:
                value:
                  id: ord_live_xjmEW4dIyJM9G4cc
                  order_types:
                    - cuotealo
                    - cip
      tags:
        - Ordenes
  /v2/orders/{id}:
    parameters:
      - schema:
          type: string
          example: '"ord_live_QDO81GT6Zaseewkp"'
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID de la orden a consultar.
    get:
      summary: Consultar Orden
      tags:
        - Ordenes
      responses:
        '200':
          description: La petición fue exitosa
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: order
                    id: ord_live_xjmEW4dIyJM9G4cc
                    amount: 6000
                    payment_code: '13642064'
                    currency_code: PEN
                    description: Venta de polo
                    order_number: '#id-9999'
                    state: pending
                    total_fee: null
                    net_amount: null
                    fee_details: null
                    creation_date: 1538540487000
                    expiration_date: 1538540700000
                    updated_at: null
                    paid_at: null
                    available_on: null
                    metadata: null
                    qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
                    cuotealo: url de cuotéalo
      operationId: consultar-orden
      description: >-
        Consulta el detalle de una orden utilizando su ID. Como respuesta
        exitosa obtendrás un objeto Orden. Si la petición es inválida te
        devolveremos un error
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
        - schema:
            type: string
          in: header
          name: Authorization
          description: Llave privada.
    patch:
      summary: Actualizar orden
      operationId: actualizar-orden
      responses:
        '200':
          description: La petición fue exitosa
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-1:
                  value:
                    object: order
                    id: ord_live_xjmEW4dIyJM9G4cc
                    amount: 6000
                    payment_code: '13642064'
                    currency_code: PEN
                    description: Venta de polo
                    order_number: '#id-9999'
                    state: pending
                    total_fee: null
                    net_amount: null
                    fee_details: null
                    creation_date: 1538540487000
                    expiration_date: 1538540700000
                    updated_at: null
                    paid_at: null
                    available_on: null
                    metadata: null
                    qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
                    cuotealo: url de cuotéalo
      description: >
        Con actualizar una orden se puede extender la validez de una orden, es
        decir, el tiempo de expiración. Además, te permitirá agregar o
        reemplazar información a los valores de la metadata que enviaste a la
        hora de crearla. Cualquier parámetro o valor no provisto será omitido en
        los valores de la metadata.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  expiration_date: 234354545
              properties:
                expiration_date:
                  type: string
                  description: >-
                    Nueva fecha de expiración. Debe ser mayor a la fecha de
                    expiración original.
                  example: '"ord_live_vEcZSCOVz5PGDPdQ"'
                  minLength: 25
                  maxLength: 25
                metadata:
                  type: object
                  description: "\t\nInformación adicional de la orden a modificar\n\nExample: \"{\"dni\"=>\"71701978\"}\""
              required:
                - expiration_date
            examples:
              example-1:
                value:
                  expiration_date: '"ord_live_vEcZSCOVz5PGDPdQ"'
                  metadata: {}
      tags:
        - Ordenes
    delete:
      summary: Eliminar orden
      operationId: eliminar-orden
      responses:
        '200':
          description: La petición fue exitosa
      description: >-
        Eliminar una Orden te permitirá desactivar y dejar sin efecto una orden.
        Solo se puede aplicar para ordenes que se encuentren en estado
        'pendiente' o 'creada'.
      parameters:
        - schema:
            type: string
          in: header
          name: Content-type
          description: application/json
        - schema:
            type: string
          in: header
          name: Authorization
          description: Bearer << llave_privada >>
      tags:
        - Ordenes
  /v2/events/{id}:
    parameters:
      - schema:
          type: string
          example: evt_live_0CjjdWhFpEAZlxlz
          minLength: 25
          maxLength: 25
        name: id
        in: path
        required: true
        description: ID del evento a consultar.
    get:
      summary: Consultar Evento
      tags:
        - Eventos
      responses:
        '200':
          description: La petición fue exitosa.
      operationId: consultar-evento
      description: >-
        Devuelve los detalles de un Evento en particular. Para la petición solo
        debes enviar el ID del Evento que Culqi te devolvió en el Webhook. Todos
        los eventos comparten una estructura común y la única propiedad que es
        diferente es el parámetro data.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: Llave privada.
  /v2/events:
    get:
      summary: Listar Eventos
      tags:
        - Eventos
      responses:
        '200':
          description: La petición fue exitosa.
      operationId: listar-evento
      description: >-
        Listar eventos te permitirá obtener una serie de eventos existentes. De
        acuerdo a los filtros que uses, los diferentes eventos serán ordenados
        de acuerdo a su fecha de creación; siendo el primero el más reciente.
      parameters:
        - schema:
            type: string
            example: application/json
          in: header
          name: Content-type
          required: true
        - schema:
            type: string
            example: Bearer sk_test_UTCQSGcXW8bCyU59
          in: header
          name: Authorization
          required: true
          description: Llave privada.
        - schema:
            type: string
            example: charge.creation.succeeded (cargos exitosos)
          in: query
          name: type
          description: Tipo de evento a filtrar.
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date
          description: Fecha del evento en [UNIX Timestamp](http://www.unixtimestamp.com/)
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_from
          description: >-
            Fecha inicial de los eventos en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
        - schema:
            type: string
            example: '1476132639'
          in: query
          name: creation_date_to
          description: >-
            Fecha limite de los eventos en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
        - schema:
            type: string
            minLength: 1
            maxLength: 100
            example: '50'
          in: query
          name: limit
          description: Cantidad exacta de eventos que se quieren listar.
        - schema:
            type: string
            example: evt_live_7lYOtONQ9LxcgJUW
          in: query
          name: before
          description: >-
            El ID del evento desde donde se quiere traer la página anterior. No
            inclusivo.
        - schema:
            type: string
            example: evt_live_7lYOtOMM6LxcgJUW
            minLength: 25
            maxLength: 25
          in: query
          name: after
          description: >-
            El ID del evento desde donde se quiere traer la siguiente página. No
            inclusivo.
components:
  schemas:
    Token:
      description: Objeto Token
      type: object
      x-examples:
        example-1:
          object: token
          id: tkn_live_0CjjdWhFpEAZlxlz
          type: card
          email: richard@piedpiper.com
          creation_date: 1476132639
          card_number: 442328******1214
          last_four: '1214'
          active: true
          iin:
            object: iin
            bin: '442328'
            card_brand: Visa
            card_type: credito
            card_category: platinum
            issuer:
              name: Silicon Valley Bank
              country: United States
              country_code: US
              website: https://www.svb.com
              phone_number: +1.800.774.7390
            installments_allowed:
              - 2
              - 4
              - 8
              - 12
              - 24
              - 36
          client:
            ip: 72.229.28.185
            ip_country: United States
            ip_country_code: US
            browser: Google Chrome 56.0.2924.87
            device_fingerprint: 6rITdVTYkWfOrss8
            device_type: escritorio
          metadata:
            dni: '5831543'
      title: Objeto Token
      properties:
        object:
          type: string
          minLength: 1
          description: Nombre del objeto
          enum:
            - token
        id:
          type: string
          minLength: 1
          description: ID del token.
          example: tkn_live_0CjjdWhFpEAZlxlz
        type:
          type: string
          minLength: 1
          description: Método de pago.
          enum:
            - card
        creation_date:
          type: integer
          example: 1476132639
          description: Fecha de creación del [token en UNIX.](http://www.unixtimestamp.com/)
        email:
          type: string
          minLength: 1
          description: Dirección de correo electrónico del cliente.
          example: richard@piedpiper.com
        card_number:
          type: string
          minLength: 1
          description: Número de la tarjeta enmascarado.
          example: 442328******1214
        last_four:
          type: string
          minLength: 1
          description: Ultimos cuatro números de la tarjeta.
          example: '1214'
        active:
          type: boolean
          description: Indica si el token se encuentra activo para realizar un cargo.
        iin:
          type: object
          required:
            - object
            - bin
            - card_brand
            - card_type
            - card_category
            - issuer
            - installments_allowed
          description: Información del banco emisor y el tipo de tarjeta.
          properties:
            object:
              type: string
              minLength: 1
              description: Nombre del objeto.
            bin:
              type: string
              description: >-
                Código de identificación del banco emisor expresado en formato
                ISO/IEC 7812.
              example: '442328'
            card_brand:
              type: string
              minLength: 1
              description: Marca de la tarjeta.
              enum:
                - Visa
                - Mastercard
                - Amex
                - Diners
            card_type:
              type: string
              minLength: 1
              description: Tipo de tarjeta.
              enum:
                - credito
                - debito
                - prepagada
            card_category:
              type: string
              minLength: 1
              description: Categoría de la tarjeta.
              example: platinum
            issuer:
              type: object
              required:
                - name
                - country
                - country_code
                - website
                - phone_number
              description: Información del banco emisor de la tarjeta.
              properties:
                name:
                  type: string
                  minLength: 1
                  description: Nombre del banco emisor de la tarjeta.
                  example: Silicon Valley Bank
                country:
                  type: string
                  minLength: 1
                  example: País del banco emisor de la tarjeta.
                country_code:
                  type: string
                  minLength: 1
                  description: Código del país del banco emisor en formato ISO 3166-2.
                  example: US
                website:
                  type: string
                  description: Sitio web del banco emisor.
                  example: https://www.svb.com/
                phone_number:
                  type: string
                  minLength: 1
                  description: Número de teléfono del banco emisor.
                  example: +1.800.774.7390
            installments_allowed:
              type: array
              description: Número de cuotas soportadas por la tarjeta.
              items:
                type: integer
                example: 2, 4, 8, 12, 24, 36
        client:
          type: object
          required:
            - ip
            - ip_country
            - ip_country_code
            - browser
            - device_fingerprint
            - device_type
          description: Información del cliente y dispositivo utilizado.
          properties:
            ip:
              type: string
              description: Dirección IP.
              example: 72.229.28.185
            ip_country:
              type: string
              description: País de la Dirección IP.
              example: United States
            ip_country_code:
              type: string
              minLength: 1
              description: Código del país de la Dirección IP en formato ISO 3166-2.
              example: US
            browser:
              type: string
              minLength: 1
              description: Nombre y versión del navegador.
              example: Google Chrome 56.0.2924.87
            device_fingerprint:
              type: string
              description: Código único de identificación del dispositivo.
              example: 6rITdVTYkWfOrss8
            device_type:
              type: string
              description: Tipo de dispositivo.
              enum:
                - escritorio
                - tablet
                - smartphone
        metadata:
          type: object
          description: >-
            Envía parametros adicionales con información relevante. [Ver
            más](#section/Metadata)
          properties:
            dni:
              type: string
              example: '5831543'
      required:
        - object
        - id
        - type
        - creation_date
        - email
        - card_number
        - last_four
        - active
        - iin
        - client
    Cargo:
      title: Cargo
      type: object
      x-examples:
        example-1:
          object: charge
          id: chr_live_kEazTaQBDtzNdwFr
          creation_date: 1556206150307
          amount: 10000
          amount_refunded: 0
          current_amount: 10000
          installments: 0
          installments_amount: null
          currency: PEN
          email: null
          description: Hooli Phone
          source:
            object: token
            id: tkn_live_0CjjdWhFpEAZlxlz
            type: card
            email: richard@piedpiper.com
            creation_date: 1476132639
            card_number: 442328******1214
            last_four: '1214'
            active: true
            iin:
              object: iin
              bin: '442328'
              card_brand: Visa
              card_type: credito
              card_category: platinum
              issuer:
                name: Silicon Valley Bank
                country: United States
                country_code: US
                website: https://www.svb.com
                phone_number: +1.800.774.7390
              installments_allowed:
                - 2
                - 4
                - 8
                - 12
                - 24
                - 36
            client:
              ip: 72.229.28.185
              ip_country: United States
              ip_country_code: US
              browser: Google Chrome 56.0.2924.87
              device_fingerprint: 6rITdVTYkWfOrss8
              device_type: escritorio
      properties:
        object:
          type: string
          description: Nombre del objeto.
        id:
          type: string
          description: ID del cargo.
          example: chr_live_kEazTaQBDtzNdwFr
        creation_date:
          type: integer
          description: Fecha de creación del cargo en UNIX Timestamp.
          example: '1476132639'
        amount:
          type: integer
          description: Monto inicial del cargo en céntimos.
          example: 10000
        amount_refunded:
          description: Monto devuelto del cargo en céntimos.
          example: '500'
          type: integer
        current_amount:
          type: integer
          description: Monto actual del cargo en céntimos.
          example: 9900
        installments:
          type: integer
          description: Número de cuotas aplicadas al cargo.
          example: '2'
        installments_amount:
          type: integer
          description: Monto aproximado de la cuota que se aplicará al cliente.
        currency_code:
          type: string
          description: >-
            Código de la moneda en la que se realizó el cargo en formato **ISO
            3166-2.** 
          enum:
            - PEN
            - USD
        email:
          type: string
          description: Dirección de correo electrónico del cliente.
          example: richard@piedpiper.com
        description:
          type: string
          description: Descripción del producto o servicio adquirido.
          example: Hooli Phone
        source:
          type: object
          description: >-
            Información del objeto utilizado para crear el cargo. Puede ser un
            [token](#tag/Tokens) o una [tarjeta](#tag/Tarjetas).
        outcome:
          type: object
          description: Información detallada acerca del éxito o denegación del cargo.
          required:
            - type
            - code
            - merchant_message
            - user_message
          properties:
            type:
              type: string
              description: >-
                Si el cargo fue exitoso recibirás tipos de errores para más
                información.
              example: succesfull_request
            code:
              type: string
              description: Código que indica el resultado del cargo.
              enum:
                - succesfull_charge
                - card_declined
              example: succesfull_charge
            decline_code:
              type: string
              description: Indica el motivo de denegación devuelto por los bancos.
              example: insufficient_funds
            merchant_message:
              type: string
              description: >-
                Mensaje dirigido al comercio para conocer el resultado del
                cargo.
              example: >-
                Venta exitosa. Se logró realizar el cargo a la tarjeta del
                cliente.
            user_message:
              type: string
              description: Mensaje dirigido al cliente para conocer el resultado del cargo.
              example: ¡Felicitaciones! Su compra ha sido exitosa.
        fraud_score:
          type: number
          description: >-
            Métrica que define el nivel de riesgo de fraude del cliente. Revisa
            la [guía de análisis de riesgo](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/fraude/riesgos/) para más
            información.
          example: 30
        antifraud_details:
          type: object
          description: Parámetros evaluados para el motor de fraude.
          properties:
            first_name:
              type: string
              description: Nombres del cliente.
              example: Richard
            last_name:
              type: string
              description: Apellidos del cliente.
              example: Hendricks
            address:
              type: string
              description: Dirección del cliente.
              example: 5230 Newell Road
            address_city:
              type: string
              description: Ciudad del cliente.
              example: Palo Alto
            country_code:
              type: string
              description: >-
                Código del país de la dirección del cliente en formato **ISO
                3166-2**.
              example: US
            phone:
              type: string
              description: >-
                Número de teléfono del cliente, sólo dígitos. No permite signos
                ni espacios.
              example: '65054324800'
        dispute:
          type: boolean
          description: >-
            Indica si el cargo está en disputa. Revisa la [guía de
            disputas](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/fraude/riesgos/) para más información.
        reference_code:
          type: string
          description: ID de referencia de la marca procesadora.
          example: 1jKsutQy4s
        duplicated:
          type: boolean
          description: Indica si ya se realizó un cargo con la misma información.
        metadata:
          type: object
          description: >-
            Envía parametros adicionales con información relevante. [Ver
            más.](#section/Metadata)
        fee_details:
          type: object
          description: >-
            Información detallada acerca de la comisión cobrada por Culqi.


            **IMPORTANTE:** Las comisiones se calculan de manera asíncrona, por
            lo que podrá recibir valores en blanco o NULL
            temporalmente.                
          properties:
            fixed_fee:
              type: object
              description: >-
                Información detallada acerca de la comisión fija cobrada por
                Culqi.
            variable_fee:
              type: object
              properties:
                currency_code:
                  type: string
                  description: >-
                    Código del país de la moneda de la comisión variable
                    expresada en formato ISO 3166-2.
                  enum:
                    - PEN
                    - USD
                  example: PEN
                commision:
                  type: number
                  example: 0.0399
                  description: Porcentaje variable que se aplica al monto actual del cargo.
                total:
                  type: integer
                  description: Monto final de la comisión variable expresada en céntimos.
                  example: 399
              required:
                - currency_code
                - commision
                - total
        paid:
          type: boolean
          description: >-
            Indica si el cargo está depositado en la cuenta bancaria. Revisa la
            [guía de depósitos](https://docs-dev.culqi.xyz/es/documentacion/pagos-online/depositos/resumen/) para más información.
        statement_descriptor:
          type: string
          description: >-
            Descripción que aparecerá en el estado de cuenta del cliente para
            reflejar el cargo.
          example: Culqi
        operations:
          type: object
          description: >-
            Información de las operaciones que afectaron el monto original del
            cargo.
          required:
            - type
            - operation_id
            - creation_date
          properties:
            type:
              type: string
              description: Tipo de operación.
              example: devolucion
              enum:
                - devolucion
                - disputa
                - fraude
            operation_id:
              type: string
              description: ID de la operación.
              example: ref_live_TWsfemI22ypplGK6
            creation_date:
              type: integer
              description: >-
                Fecha de creación de la operación en [UNIX
                Timestamp].(http://www.unixtimestamp.com/)
              example: 1476132639
      required:
        - object
        - id
        - creation_date
        - amount
        - current_amount
        - currency_code
        - email
        - source
        - outcome
        - antifraud_details
        - dispute
        - reference_code
        - duplicated
        - metadata
        - fee_details
        - paid
        - statement_descriptor
        - operations
    Devolucion:
      description: ''
      type: object
      x-examples:
        example-1:
          object: refund
          id: ref_live_TTfLAgaA8nz8PWbO
          charge_id: chr_live_kEazTaQBDtzNdwFr
          creation_date: 1556552960000
          amount: 2000
          reason: Devolución solicitada por el comercio
          metadata: {}
      title: Objeto Devolución
      properties:
        object:
          type: string
          minLength: 1
          description: Nombre del objeto.
          enum:
            - refund
        id:
          type: string
          minLength: 1
          description: ID de la devolución.
          example: ref_live_TTfLAgaA8nz8PWbO
        charge_id:
          type: string
          minLength: 1
          example: chr_live_kEazTaQBDtzNdwFr
          description: ID del cargo al que se le aplicó la devolución.
        creation_date:
          type: integer
          description: Fecha de creación de la devolución en UNIX Timestamp.
          example: 1476132639
        amount:
          type: integer
          example: 1000
          description: Monto de la devolución en céntimos.
        reason:
          type: string
          minLength: 1
          description: Razón o motivo de la devolución.
          enum:
            - Duplicado
            - Fraudulento
            - Devolución solicitada por el comercio
        metadata:
          type: object
          description: Envía parametros adicionales con información
        status:
          type: string
          description: Estado de la devolución.
          enum:
            - Completa
            - Pendiente
            - Rechazado
        last_modified:
          type: integer
          description: >-
            Fecha de actualización del estado de la devolución en UNIX
            Timestamp.
          example: 1476132639
      required:
        - object
        - id
        - charge_id
        - creation_date
        - amount
        - reason
    Cliente:
      description: ''
      type: object
      x-examples:
        example-1:
          object: customer
          id: cus_live_Lz6Yfsm7QqCPIECW
          creation_date: 1487041774773
          email: richard@piedpiper.com
          antifraud_details:
            country_code: US
            first_name: Richard
            last_name: Richard
            address_city: Palo Alto
            address: San Francisco Bay Area
            phone: '6505434800'
            object: client
          metadata: {}
      properties:
        object:
          type: string
          minLength: 1
          description: Nombre del objeto.
          enum:
            - customer
        id:
          type: string
          minLength: 1
          description: ID del cliente.
          example: cus_live_TWsfemI22ypplGK6
        creation_date:
          type: integer
          description: Fecha de creación del cliente en UNIX Timestamp.
          example: 1476132639
        email:
          type: string
          minLength: 1
          description: Dirección de correo electrónico del cliente.
          example: richard@piedpiper.com
        antifraud_details:
          type: object
          required:
            - country_code
            - first_name
            - last_name
            - address_city
            - address
            - phone
            - object
          description: Parámetros evaluados para el motor de fraude.
          properties:
            country_code:
              type: string
              minLength: 1
              description: >-
                Código del país de la dirección del cliente en formato ISO
                3166-2.
              example: US
            first_name:
              type: string
              minLength: 1
              description: Nombres del cliente.
              example: Richard
            last_name:
              type: string
              minLength: 1
              description: Apellidos del cliente.
              example: Hendricks
            address_city:
              type: string
              minLength: 1
              description: Ciudad del cliente.
              example: Palo Alto
            address:
              type: string
              minLength: 1
              description: Dirección del cliente.
              example: 5230 Newell Road
            phone:
              type: string
              minLength: 1
              description: Número de teléfono del cliente.
              example: '65054324800'
            object:
              type: string
              minLength: 1
              description: Nombre del objeto.
              example: client
        metadata:
          type: object
          description: Envía parametros adicionales con información relevante. Ver más.
      required:
        - object
        - id
        - creation_date
        - email
        - antifraud_details
    Tarjeta:
      description: ''
      type: object
      x-examples:
        example-1:
          object: card
          id: crd_live_TWsfemI22ypplGK6
          date: 1487044833972
          customer_id: cus_live_TWsfemI22ypplGK6
          source:
            object: token
            id: tkn_live_vEcZSCOVz5PGDPdQ
            type: card
            creation_date: 1487044809000
            card_number: 411111******1111
            last_four: '1111'
            active: true
            iin:
              object: iin
              bin: '411111'
              card_brand: Visa
              card_type: credit
              card_category: Clásica
              issuer:
                name: JPMORGAN CHASE BANK, N.A.
                country: United States
                country_code: PE
                website: null
                phone_number: null
              installments_allowed:
                - 2
                - 4
                - 6
                - 8
                - 10
                - 12
            client:
              ip: 190.235.231.153
              ip_country: Perú
              ip_country_code: PE
              browser: null
              device_fingerprint: null
              device_type: null
          metadata: {}
      properties:
        object:
          type: string
          description: Nombre del objeto.
          enum:
            - card
        id:
          type: string
          description: ID de la tarjeta.
          example: crd_live_TWsfemI22ypplGK6
        creation_date:
          type: integer
          description: Fecha de creación de la tarjeta en UNIX Timestamp.
          example: 1476132639
        customer_id:
          type: string
          description: ID del cliente.
          example: cus_live_TWsfemI22ypplGK6
        source:
          type: object
          description: >
            Información del objeto <a href="#operation/crear-token">token</a>
            utilizado para crear una tarjeta.
        metadata:
          type: object
          description: Envia parámetros adicionales con información relevante. Ver más.
      required:
        - object
        - id
        - creation_date
        - customer_id
        - source
        - metadata
    Plan:
      description: ''
      type: object
      x-examples:
        example-1:
          object: plan
          id: pln_live_uvBzalwuY3UsxJ9l
          creation_date: 1556569427000
          name: Hooli Subscription
          amount: 2000
          currency_code: PEN
          interval_count: 1
          interval: Meses
          limit: 0
          trial_days: 0
          total_subscriptions: 0
          metadata: {}
      properties:
        object:
          type: string
          minLength: 1
          description: Nombre del objeto.
          enum:
            - plan
        id:
          type: string
          minLength: 1
          description: ID del plan.
          example: pln_live_QDO81GT6Zaseewkp
        creation_date:
          type: integer
          description: >-
            Fecha de creación del plan en [UNIX
            Timestamp](http://www.unixtimestamp.com/).
          example: 1476132639
        name:
          type: string
          minLength: 1
          description: Descripción del plan.
          example: Hooli Subscription
        amount:
          type: number
          description: Monto del plan a cobrar recurrentemente expresado en céntimos.
          example: 10000
        currency_code:
          type: string
          minLength: 1
          description: >-
            Código del país de la moneda de la suscripción en formato **ISO
            3166-2**.
          enum:
            - PEN
            - USD
        interval_count:
          type: integer
          description: Define el intervalo de cada cuánto se va a realizar un cargo.
          example: 1
        interval:
          type: string
          minLength: 1
          description: Define el periodo de un cargo recurrente.
          enum:
            - dias
            - semanas
            - meses
            - años
        limit:
          type: integer
          description: >-
            Define el límite de cuántos cargos se deben realizar. Si no se
            define, los cargos recurrentes son infinitos.
          example: 2
        trial_days:
          description: Número de días del "periodo de pruebas".
          example: 1
          type: integer
        total_subscriptions:
          type: integer
          description: Número de suscripciones afiliadas a un plan.
          example: 79
        metadata:
          type: object
          description: >-
            Envía parametros adicionales con información relevante. [Ver
            más](#section/Metadata).
      required:
        - object
        - id
        - creation_date
        - name
        - amount
        - currency_code
        - interval_count
        - interval
        - limit
        - trial_days
        - total_subscriptions
        - metadata
    Orden:
      description: ''
      type: object
      x-examples:
        example-1:
          object: order
          id: ord_live_xjmEW4dIyJM9G4cc
          amount: 6000
          payment_code: '13642064'
          currency_code: PEN
          description: Venta de polo
          order_number: '#id-9999'
          state: pending
          total_fee: null
          net_amount: null
          fee_details: null
          creation_date: 1538540487000
          expiration_date: 1538540700000
          updated_at: null
          paid_at: null
          available_on: null
          metadata: null
          qr: iVBORw0KGgoAAAANSUhE..........K5CYII=
          cuotealo: url de cuotéalo
      properties:
        object:
          type: string
          minLength: 1
          enum:
            - order
          description: Nombre del objeto.
        id:
          type: string
          minLength: 1
          description: ID de la Orden.
          example: ord_live_TWsfemI22ypplGK6
        amount:
          type: integer
          example: 600.00 serían 60000
          description: Monto de la Orden. Sin punto decimal.
        payment_code:
          type: string
          minLength: 1
          description: Código de pago de la orden.
          example: '13642064'
        currency_code:
          type: string
          minLength: 1
          description: Código de la moneda en tres letras Formato **ISO 4217**.
          enum:
            - PEN
        description:
          type: string
          description: Descripcion de la orden.
          example: Venta de polo
          minLength: 5
          maxLength: 80
        order_number:
          type: string
          minLength: 1
          description: Número de la orden. Este debe ser único entre todas tus órdenes.
          example: '#id-9999'
        creation_date:
          type: integer
          description: >-
            Fecha de creación de la orden en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
          example: 1476132639
        expiration_date:
          type: integer
          description: >-
            Fecha de creación de la tarjeta en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)


            El tiempo de vigencia de CIP es mínimo 10 minutos y máximo 6 meses
          example: 1476132639
        metadata:
          description: >-
            Envia parámetros adicionales con información relevante. [Ver
            más.](#section/Metadata)
          type: object
        qr:
          type: string
          minLength: 1
          description: >-
            Contiene la imagen del QR en base 64 para los pagos con billeteras
            móviles.
        cuotealo:
          type: string
          minLength: 1
          description: >-
            Muestra la URL que será redirigido tu cliente para evaluar si su
            compra será financiada por Cuotéalo BCP.
      required:
        - object
        - id
        - amount
        - currency_code
        - description
        - creation_date
        - expiration_date
      title: ''
    Suscripcion:
      description: ''
      type: object
      x-examples:
        example-1:
          object: subscription
          id: sub_live_3jswePaiCzqgrGeb
          creation_date: 1556573460000
          status: Activa
          current_period: 1
          total_period: 2
          current_period_start: 1556600400000
          current_period_end: 1556686800000
          cancel_at_period_end: true
          cancel_at: null
          ended_at: 1556686800000
          next_billing_date: 1556600400000
          trial_start: 1556573460000
          trial_end: 1556573460000
          charges:
            - duplicated: null
              object: charge
              id: chr_live_ZIFPHDMxfK4o3SWG
              creation_date: 1556573460854
              amount: 300
              amount_refunded: 0
              current_amount: 300
              installments: 0
              installments_amount: null
              currency_code: PEN
              email: richard@piedpiper.com
              description: Plan Basico
              source:
                object: token
                id: tkn_live_0uBKVi3TYWvJktrZ
                type: card
                creation_date: 1542057744000
                email: richard@piedpiper.com
                card_number: 411111******1111
                last_four: '1111'
                active: true
                iin:
                  object: iin
                  bin: '411111'
                  card_brand: Visa
                  card_type: debito
                  card_category: Empresarial
                  issuer:
                    name: BCP
                    country: PERU
                    country_code: PE
                    website: null
                    phone_number: null
                  installments_allowed: []
                client:
                  ip: 190.42.137.165
                  ip_country: Perú
                  ip_country_code: PE
                  browser: null
                  device_fingerprint: null
                  device_type: Escritorio
                metadata: {}
              outcome:
                type: venta_exitosa
                code: AUT0000
                merchant_message: La operación de venta ha sido autorizada exitosamente
                user_message: Su compra ha sido exitosa.
              fraud_score: null
              antifraud_details:
                first_name: Liz
                last_name: Reuelas
                address: av. lima 543
                address_city: Lima
                country_code: PE
                phone: '986345071'
                object: client
              dispute: false
              capture: null
              reference_code: '713362012'
              authorization_code: '387241'
              metadata: {}
              total_fee: 14
              fee_details:
                fixed_fee: {}
                variable_fee:
                  currency_code: PEN
                  commision: 0.0399
                  total: 12
              paid: false
              statement_descriptor: CULQI*
              transfer_id: null
              capture_date: null
          plan:
            object: plan
            id: pln_live_p2h9whfQH9h4K1uF
            creation_date: 1542057736000
            name: Plan Basico
            amount: 300
            currency_code: PEN
            interval_count: 1
            interval: Días
            limit: 2
            trial_days: 0
            total_subscriptions: 3
            metadata: {}
          card:
            object: card
            id: crd_live_4F1vID7awAMt4mRB
            active: true
            creation_date: 1542057587000
            customer_id: cus_live_8yoYQOr0p6peIZ1d
            source:
              object: token
              id: tkn_live_0uBKVi3TYWvJktrZ
              type: card
              creation_date: 1542057744000
              email: richard@piedpiper.com
              card_number: 411111******1111
              last_four: '1111'
              active: true
              iin:
                object: iin
                bin: '411111'
                card_brand: Visa
                card_type: debito
                card_category: Empresarial
                issuer:
                  name: BCP
                  country: PERU
                  country_code: PE
                  website: null
                  phone_number: null
                installments_allowed: []
              client:
                ip: 190.42.137.165
                ip_country: Perú
                ip_country_code: PE
                browser: null
                device_fingerprint: null
                device_type: Escritorio
              metadata: {}
            metadata: {}
          metadata: {}
      title: ''
      properties:
        object:
          type: string
          minLength: 1
          description: Nombre del objeto.
          enum:
            - subscription
        id:
          type: string
          minLength: 1
          example: sub_live_0CjjdWhFpEAZlxlz
          description: ID de la suscripción.
        creation_date:
          type: integer
          description: >-
            Fecha de creación de la suscripción en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
        status:
          type: string
          minLength: 1
          description: Estado de la suscripción.
          enum:
            - Activa
            - Cancelada
            - Finalizada
        current_period:
          type: integer
          description: Número del ciclo actual de la suscripción.
          example: 4
        total_period:
          type: integer
          description: >-
            Número del ciclos totales de la suscripción. Si es null los ciclos
            son infinitos.
          example: 12
        current_period_start:
          type: integer
          description: >-
            Fecha de inicio del ciclo en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
          example: 1476132639
        current_period_end:
          type: integer
          description: Fecha de fin del ciclo en [UNIX Timestamp.](http://www.unixtimestamp.com/)
          example: 1476132639
        cancel_at_period_end:
          type: boolean
          description: Indica si la suscripción finaliza luego de terminar el ciclo actual.
        canceled_at:
          type: integer
          description: Fecha en la que fue cancelada la suscripción en UNIX Timestamp.
          example: 1476132639
        ended_at:
          type: integer
          description: >-
            Fecha en la que finalizará la suscripción en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
        next_billing_date:
          type: integer
          description: >-
            Fecha en la que inicia el próximo ciclo de la suscripción en [UNIX
            Timestamp.](http://www.unixtimestamp.com/)
        trial_start:
          type: integer
          description: >-
            Fecha en la que inicia el periodo de pruebas gratis de la
            suscripción en [UNIX Timestamp.](http://www.unixtimestamp.com/)
          example: 1476132639
        trial_end:
          type: integer
          description: >-
            Fecha en la que finaliza el periodo de pruebas gratis de la
            suscripción en [UNIX Timestamp.](http://www.unixtimestamp.com/)
          example: 1476132639
        charges:
          type: object
          description: >-
            Listado de [cargos](#tag/Cargos) realizados durante todos los
            ciclos.
        plan:
          type: object
          description: Información del objeto plan utilizado para crear una suscripción.
        card:
          type: object
          description: Información del objeto card utilizado para crear una suscripción.
        metadata:
          type: object
          description: Envía parametros adicionales con información relevante. Ver más.
      required:
        - object
        - id
        - creation_date
        - status
        - current_period
        - total_period
        - current_period_start
        - current_period_end
        - cancel_at_period_end
        - canceled_at
        - ended_at
        - next_billing_date
        - trial_start
        - trial_end
        - charges
        - plan
        - card
        - metadata
    Metadata:
      title: Objeto Metadata
      type: object
      properties:
        order_id:
          type: string
          description: Adjunta un número de pedido incremental.
          example: '204055'
        user_id:
          type: string
          description: Adjunta un identificador del cliente de tu sistema.
          example: '4625'
        user_details:
          type: string
          description: Adjunta datos adicionales sobre tu cliente 100.
          example: '46734527'
    Evento:
      description: ''
      type: object
      x-examples:
        example-1:
          object: event
          type: charged.failed
          data: {}
      properties:
        object:
          type: string
          description: Nombre del objeto.
          example: tkn_
          minLength: 25
          maxLength: 25
        type:
          type: string
          minLength: 1
          description: Identifica si es un cargo repetido.
        data:
          type: object
          description: Objeto que contiene al recurso.
      required:
        - object
        - type
        - data
      title: Objeto Evento
    Rastreo:
      type: object
      properties:
        date:
          type: string
          description: Fecha en la que se creó la petición en UNIX Timestamp.
          example: '1476132639'
        x-culqi-environment:
          type: string
          description: Entorno al que se realizó la petición. Ver más.
          enum:
            - live
            - test
        x-culqi-tracking-id:
          type: string
          description: Código de identificación de la petición.
          example: '9283'
        x-culqi-version:
          type: string
          description: Número de versión del API.
          example: 17.01.89
        content-type:
          type: string
          description: Formato de contenido de la respuesta.
          enum:
            - applcation/json
      required:
        - date
        - x-culqi-environment
        - x-culqi-tracking-id
        - x-culqi-version
        - content-type
    Error:
      title: Objecto Error
      x-stoplight:
        id: th7ghbb22gn9b
      type: object
      properties:
        type:
          type: string
          description: Indica el tipo de error devuelto
          example: card_error
          enum:
            - invalid_request_error
            - authentication_error
            - parameter_error
            - card_error
            - limit_api_error
            - resource_error
            - api_error
        charge_id:
          type: string
          description: El ID del cargo que ha sido denegado
          example: '"chr_test_stm3Fr4HIPC50qxH"'
        code:
          type: string
          description: Indica el tipo de error relacionado a una tarjeta
          example: ' "card_declined"'
        declined_code:
          type: string
          description: Indica el motivo de denegación devuelto por los bancos.
          example: '"insufficient_funds"'
        merchant_message:
          type: string
          description: Mensaje dirigido al comercio para conocer el detalle del error.
          example: ' "La tarjeta no tiene fondos suficientes para realizar la compra."'
        user_message:
          type: string
          description: Mensaje dirigido al cliente para conocer el detalle del error.
          example: ' "Su tarjeta no tiene fondos suficientes. Verifica tus fondos disponibles con el banco emisor o inténta nuevamente con otra tarjeta."'
        param:
          type: string
          description: Indica el parámetro específico relacionado al error.
          example: ' "amount"'
      required:
        - type
        - merchant_message
